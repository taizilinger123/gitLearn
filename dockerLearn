sudo apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D
sudo touch /etc/apt/sources.list.d/docker.list && echo "deb https://apt.dockerproject.org/repo ubuntu-xenial main" >>/etc/apt/sources.list.d/docker.list
sudo apt-get  upgrade
sudo apt-get  update
sudo apt-get install docker-engine
sudo usermod -aG docker yi
sudo systemctl start docker
sudo systemctl enable docker
root@sige:~# mkdir  -p  /etc/systemd/system/docker.service.d/
root@sige:~# cat  /etc/systemd/system/docker.service.d/http-proxy.conf
[Service]
Environment="HTTP_PROXY=http://child-prc.intel.com:913"
Environment="HTTPS_PROXY=http://child-prc.intel.com:913"
Environment="FTP_PROXY=http://child-prc.intel.com:913"
Environment="SOCKS_PROXY=http://child-prc.intel.com:913"
root@sige:~# sudo systemctl daemon-reload
root@sige:~# systemctl show --property=Environment docker
Environment=HTTP_PROXY=http://child-prc.intel.com:913 HTTPS_PROXY=http://child-prc.intel.com:913 FTP_PROXY=http://child-prc.intel.com:913 SOCKS_PROXY=http://child-prc.intel.com:913
root@sige:~# sudo systemctl restart docker
root@sige:~# docker  search  ubuntu
root@sige:~# docker run  ubuntu  echo "Hello World"
root@sige:~# cat      /etc/docker/daemon.json
{
  "registry-mirrors": ["https://hccwwfjl.mirror.aliyuncs.com"]
}
root@sige:~# sudo systemctl restart docker
root@sige:~# docker run  ubuntu  echo "Hello World"   #这样子就解决了很快就下载完了



root@sige:~# sudo  groupadd  docker
groupadd: group 'docker' already exists
root@sige:~# sudo gpasswd -a  root  docker   #把当前的用户加到docker用户组
Adding user root to group docker
root@sige:~# systemctl  restart  docker
退出登录重新登录一下，然后普通用户就可以正常使用docker了
root@sige:~# docker   version
root@sige:~# docker run  ubuntu  echo "Hello World"
Hello World
root@sige:~# docker run  -i  -t ubuntu  /bin/bash
root@39744ead2841:/# ls
root@39744ead2841:/# ps
  PID TTY          TIME CMD
    1 ?        00:00:00 bash
   12 ?        00:00:00 ps
root@sige:~# docker  run  -it  --name  nwtl ubuntu   /bin/bash
root@sige:~# docker  ps  -a
root@sige:~# docker  stop   1790f8dca366
root@sige:~# docker  start   1790f8dca366
root@sige:~# docker  restart   1790f8dca366
root@sige:~# docker  rm  nwtl
root@sige:~# docker  rm   1790f8dca366
root@sige:~# docker run ubuntu:15.10 /bin/echo "Hello world"
root@sige:~# docker run -i -t ubuntu:15.10 /bin/bash
root@456a3adc4091:/# cat /proc/version     #查看服务器版本
root@456a3adc4091:/#exit
root@sige:~# docker pull training/webapp
root@sige:~# docker run -d -P training/webapp python app.py
root@sige:~# docker  ps
root@sige:~# docker  logs  -f   322d44ada1f4
root@sige:~# docker images
REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
centos              latest              5182e96772bf        37 hours ago        200MB
ubuntu              latest              735f80812f90        12 days ago         83.5MB
ubuntu              15.10               9b9cb95443b5        2 years ago         137MB
training/webapp     latest              6fae60ef3446        3 years ago         349MB
root@sige:~#  docker run -t -i ubuntu:15.10 /bin/bash
root@e25f1c8154d3:/#exit
root@sige:~# docker run -t -i ubuntu:14.04 /bin/bash
Unable to find image 'ubuntu:14.04' locally
14.04: Pulling from library/ubuntu
8284e13a281d: Pull complete
26e1916a9297: Pull complete
4102fc66d4ab: Pull complete
1cf2b01777b2: Pull complete
7f7a2d5e04ed: Pull complete
Digest: sha256:71529e96591eb36a4100cd0cc5353ff1a2f4ee7a85011e3d3dd07cb5eb524a3e
Status: Downloaded newer image for ubuntu:14.04
root@f51789de8d0e:/# ifconfig
eth0      Link encap:Ethernet  HWaddr 02:42:ac:11:00:03
          inet addr:172.17.0.3  Bcast:0.0.0.0  Mask:255.255.0.0
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          RX packets:21 errors:0 dropped:0 overruns:0 frame:0
          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:0
          RX bytes:3336 (3.3 KB)  TX bytes:0 (0.0 B)

lo        Link encap:Local Loopback
          inet addr:127.0.0.1  Mask:255.0.0.0
          UP LOOPBACK RUNNING  MTU:65536  Metric:1
          RX packets:0 errors:0 dropped:0 overruns:0 frame:0
          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:1000
          RX bytes:0 (0.0 B)  TX bytes:0 (0.0 B)
root@sige:~# sudo  brctl show
bridge name	bridge id		STP enabled	interfaces
br0		8000.000000000000	no
docker0		8000.0242d959013a	no          vethb72e7fc   #多了一个接口名字
							vethb7f576b
virbr0		8000.000000000000	yes
root@sige:~# ifconfig  docker0  192.168.10.1  netmask  255.255.255.0   #修改docker0的网卡的IP
root@sige:~# ifconfig
root@sige:~# sudo  brctl addbr  br1
root@sige:~# sudo ifconfig  br1 192.168.100.1 netmask 255.255.255.0
root@sige:~# ifconfig
root@sige:~# tail  -1  /etc/default/docker
DOCKER_OPTS="-b=br1"
root@sige:~# service  docker  restart
root@sige:~# ps aux |  grep  docker
root@sige:~# docker run -t -i ubuntu:14.04 /bin/bash
root@f51789de8d0e:/# ifconfig
root@cb298725ed6c:/# cat    /etc/environment
PATH="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games"
http_proxy="http://child-prc.intel.com:913/"
https_proxy="https://child-prc.intel.com:913/"
ftp_proxy="ftp://child-prc.intel.com:913/"
socks_proxy="socks://child-prc.intel.com:913/"
root@cb298725ed6c:/# export http_proxy="http://child-prc.intel.com:913/"
root@cb298725ed6c:/# export https_proxy="https://child-prc.intel.com:913/"
root@cb298725ed6c:/# export ftp_proxy="ftp://child-prc.intel.com:913/"
root@cb298725ed6c:/# export socks_proxy="socks://child-prc.intel.com:913/"
root@cb298725ed6c:/# apt-get  update
root@cb298725ed6c:/# apt-get  install  curl
root@sige:~# docker search tutorial
root@sige:~# docker  pull  learn/tutorial
root@sige:~# docker  run  learn/tutorial  echo 'hello world'     #启动下载的镜像容器
root@sige:~# docker  run  learn/tutorial  apt-get  install  -y  ping   #安装ping命令
root@sige:~# docker  ps  -l   #查看有哪些docker容器
root@sige:~# docker  ps  -a  #查看所有容器
root@sige:~# docker  commit  dcde62832fd3  learn/ping   #提交新建好的容器
root@sige:~# docker  run  learn/ping  ping  www.google.com  #ping一个google网站
root@sige:~# docker  ps   #查看正在运行的容器
root@sige:~# docker  inspect   322d44ada1f4   #查看容器内容
root@sige:~# docker  images   #查看有哪些镜像
REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
learn/ping          latest              2de65d8430be        2 hours ago         139MB
centos              latest              5182e96772bf        2 days ago          200MB
ubuntu              latest              735f80812f90        13 days ago         83.5MB
ubuntu              14.04               971bb384a50a        3 weeks ago         188MB
ubuntu              15.10               9b9cb95443b5        2 years ago         137MB
training/webapp     latest              6fae60ef3446        3 years ago         349MB
learn/tutorial      latest              a7876479f1aa        5 years ago         128MB
root@sige:~# docker  push  sige/training/webapp
The push refers to a repository [docker.io/sige/training/webapp]
An image does not exist locally with the tag: sige/training/webapp
root@sige:~# docker  tag 6fae60ef3446  sige/training/webapp
root@sige:~# docker  push  sige/training/webapp
The push refers to a repository [docker.io/sige/training/webapp]
5f70bf18a086: Preparing
b44b0832d4c6: Preparing
6bbb1d0f8452: Preparing
3ee91c5cb95b: Preparing
5c121779bb29: Preparing
b75c0703b86b: Waiting
37ee47034d9b: Waiting
528c8710fd95: Waiting
1154ba695078: Waiting
denied: requested access to the resource is denied   #会报错
root@sige:~# docker login
Login with your Docker ID to push and pull images from Docker Hub. If you don't have a Docker ID, head over to https://hub.docker.com to create one.
Username: 13764236450
Password: lpwoaini123
Login Succeeded
root@sige:~# docker  tag  a7876479f1aa  13764236450/a7876479f1aa
root@sige:~# docker  push  13764236450/a7876479f1aa
The push refers to a repository [docker.io/13764236450/a7876479f1aa]
ee1ba0cc9b81: Layer already exists
latest: digest: sha256:0eef45340c47d4e5dbb6d501b7be5fa54d5878a470369c633187b1c39b95eccb size: 528
root@sige:~# docker  push  training/webapp   #保存到仓库去
root@sige:~#  cat /etc/resolv.conf | grep nameserver
nameserver 127.0.1.1
nameserver 8.8.8.8
root@sige:~# vim  /etc/resolv.conf
root@sige:~#  nmcli dev show | grep IP4.DNS
IP4.DNS[1]:                             10.248.2.5
IP4.DNS[2]:                             172.17.6.9
IP4.DNS[3]:                             10.239.27.228
root@sige:~# cat  /etc/resolv.conf
# Dynamic resolv.conf(5) file for glibc resolver(3) generated by resolvconf(8)
#     DO NOT EDIT THIS FILE BY HAND -- YOUR CHANGES WILL BE OVERWRITTEN
#nameserver 127.0.1.1
nameserver  10.248.2.5
nameserver  172.17.6.9
nameserver  10.239.27.228
search sh.intel.com
root@sige:~# cat  /etc/apt/sources.list
deb http://mirrors.aliyun.com/ubuntu/ trusty main multiverse restricted universe
deb http://mirrors.aliyun.com/ubuntu/ trusty-backports main multiverse restricted universe
deb http://mirrors.aliyun.com/ubuntu/ trusty-proposed main multiverse restricted universe
deb http://mirrors.aliyun.com/ubuntu/ trusty-security main multiverse restricted universe
deb http://mirrors.aliyun.com/ubuntu/ trusty-updates main multiverse restricted universe
deb-src http://mirrors.aliyun.com/ubuntu/ trusty main multiverse restricted universe
deb-src http://mirrors.aliyun.com/ubuntu/ trusty-backports main multiverse restricted universe
deb-src http://mirrors.aliyun.com/ubuntu/ trusty-proposed main multiverse restricted universe
deb-src http://mirrors.aliyun.com/ubuntu/ trusty-security main multiverse restricted universe
deb-src http://mirrors.aliyun.com/ubuntu/ trusty-updates main multiverse restricted universe
更新Ubuntu是出现AppStream cache update completed, but some metadata was ignored due to errors.
解决方式：
sudo rm /var/lib/dpkg/lock
root@sige:~# ifconfig
root@sige:~# sudo  apt-get install bridge-utils
root@sige:~# sudo  brctl  show
bridge name	bridge id		STP enabled	interfaces
br0		8000.000000000000	no
docker0		8000.0242d959013a	no		vethb72e7fc
virbr0		8000.000000000000	yes
root@sige:~# docker  ps
CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS               NAMES
9bf0730af557        306650123af2        "/bin/sh -c 'apt-g..."   8 minutes ago       Up 8 minutes                            jolly_thompson
root@sige:~# docker  attach  9bf0730af557   #重新进入交互式容器
root@sige:~# docker  info
root@sige:~# mkdir  dockerfile
root@sige:~# cd  dockerfile
root@sige:~/dockerfile# mkdir cct
root@sige:~/dockerfile# cd  cct
root@sige:~/dockerfile/cct# cat     Dockerfile
FROM ubuntu:14.04
env   http_proxy="http://child-prc.intel.com:913/"
env   https_proxy="https://child-prc.intel.com:913/"
env   ftp_proxy="ftp://child-prc.intel.com:913/"
env   socks_proxy="socks://child-prc.intel.com:913/"
RUN apt-get install -y  ping
RUN apt-get update
RUN apt-get install -y nginx
RUN apt-get install -y curl
EXPOSE 80
CMD /bin/bash
root@sige:~/dockerfile/cct# docker build -t dormancypres/cct .
root@sige:~/dockerfile/cct# cd
root@sige:~# docker run  -it  --name  cct1  dormancypres/cct
root@ad484ab693d6:/# nginx     起nginx服务
root@ad484ab693d6:/# root@sige:~# (ctrl+p,ctrl+q)
root@sige:~# docker run  -it  --name  cct2  dormancypres/cct
root@a3a858a6c1fd:/# ifconfig
eth0      Link encap:Ethernet  HWaddr 02:42:ac:11:00:03
          inet addr:172.17.0.3  Bcast:0.0.0.0  Mask:255.255.0.0
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          RX packets:25 errors:0 dropped:0 overruns:0 frame:0
          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:0
          RX bytes:3738 (3.7 KB)  TX bytes:0 (0.0 B)

lo        Link encap:Local Loopback
          inet addr:127.0.0.1  Mask:255.0.0.0
          UP LOOPBACK RUNNING  MTU:65536  Metric:1
          RX packets:0 errors:0 dropped:0 overruns:0 frame:0
          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:1000
          RX bytes:0 (0.0 B)  TX bytes:0 (0.0 B)
root@a3a858a6c1fd:/# root@sige:~#
root@sige:~# docker attach  cct1       #返回cct1
root@ad484ab693d6:/#
root@ad484ab693d6:/#
root@ad484ab693d6:/# ifconfig
eth0      Link encap:Ethernet  HWaddr 02:42:ac:11:00:02
          inet addr:172.17.0.2  Bcast:0.0.0.0  Mask:255.255.0.0
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          RX packets:32 errors:0 dropped:0 overruns:0 frame:0
          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:0
          RX bytes:4326 (4.3 KB)  TX bytes:0 (0.0 B)

lo        Link encap:Local Loopback
          inet addr:127.0.0.1  Mask:255.0.0.0
          UP LOOPBACK RUNNING  MTU:65536  Metric:1
          RX packets:0 errors:0 dropped:0 overruns:0 frame:0
          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:1000
          RX bytes:0 (0.0 B)  TX bytes:0 (0.0 B)
root@ad484ab693d6:/# ping  172.17.0.3
PING 172.17.0.3 (172.17.0.3) 56(84) bytes of data.
64 bytes from 172.17.0.3: icmp_seq=1 ttl=64 time=0.058 ms
64 bytes from 172.17.0.3: icmp_seq=2 ttl=64 time=0.040 ms
64 bytes from 172.17.0.3: icmp_seq=3 ttl=64 time=0.042 ms
root@ad484ab693d6:/# root@sige:~#
root@sige:~# docker attach  cct2
root@a3a858a6c1fd:/#
root@a3a858a6c1fd:/# curl  http://172.17.0.2
root@sige:~# docker  stop  cct1
cct1
root@sige:~# docker  restart   cct1
cct1
root@sige:~# docker  attach  cct1
root@ad484ab693d6:/#
root@ad484ab693d6:/#
root@ad484ab693d6:/# ifconfig   #ip会变化
root@sige:~# docker  run  -it  --name cct3  --link=cct1:webtest  dormancypres/cct    #给容器cct1起别名webtest
root@9515b77d7d9c:/#
root@9515b77d7d9c:/#
root@9515b77d7d9c:/# ifconfig
eth0      Link encap:Ethernet  HWaddr 02:42:ac:11:00:04
          inet addr:172.17.0.4  Bcast:0.0.0.0  Mask:255.255.0.0
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          RX packets:17 errors:0 dropped:0 overruns:0 frame:0
          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:0
          RX bytes:2661 (2.6 KB)  TX bytes:0 (0.0 B)

lo        Link encap:Local Loopback
          inet addr:127.0.0.1  Mask:255.0.0.0
          UP LOOPBACK RUNNING  MTU:65536  Metric:1
          RX packets:0 errors:0 dropped:0 overruns:0 frame:0
          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:1000
          RX bytes:0 (0.0 B)  TX bytes:0 (0.0 B)

root@9515b77d7d9c:/# ping  webtest
PING webtest (172.17.0.2) 56(84) bytes of data.
64 bytes from webtest (172.17.0.2): icmp_seq=1 ttl=64 time=0.071 ms
64 bytes from webtest (172.17.0.2): icmp_seq=2 ttl=64 time=0.037 ms
root@9515b77d7d9c:/# env    #查看容器的环境变量
HOSTNAME=9515b77d7d9c
WEBTEST_ENV_http_proxy=http://child-prc.intel.com:913/
WEBTEST_ENV_ftp_proxy=ftp://child-prc.intel.com:913/
TERM=xterm
WEBTEST_NAME=/cct3/webtest
WEBTEST_ENV_https_proxy=https://child-prc.intel.com:913/
http_proxy=http://child-prc.intel.com:913/
LS_COLORS=rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arj=01;31:*.taz=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.dz=01;31:*.gz=01;31:*.lz=01;31:*.xz=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.jpg=01;35:*.jpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.axv=01;35:*.anx=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.axa=00;36:*.oga=00;36:*.spx=00;36:*.xspf=00;36:
ftp_proxy=ftp://child-prc.intel.com:913/
WEBTEST_PORT_80_TCP_ADDR=172.17.0.2
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
PWD=/
socks_proxy=socks://child-prc.intel.com:913/
WEBTEST_PORT_80_TCP=tcp://172.17.0.2:80
WEBTEST_PORT=tcp://172.17.0.2:80
WEBTEST_PORT_80_TCP_PROTO=tcp
https_proxy=https://child-prc.intel.com:913/
SHLVL=1
HOME=/root
WEBTEST_PORT_80_TCP_PORT=80
LESSOPEN=| /usr/bin/lesspipe %s
WEBTEST_ENV_socks_proxy=socks://child-prc.intel.com:913/
LESSCLOSE=/usr/bin/lesspipe %s %s
_=/usr/bin/env
root@9515b77d7d9c:/# cat   /etc/hosts
127.0.0.1	localhost
::1	localhost ip6-localhost ip6-loopback
fe00::0	ip6-localnet
ff00::0	ip6-mcastprefix
ff02::1	ip6-allnodes
ff02::2	ip6-allrouters
172.17.0.2	webtest ad484ab693d6 cct1
172.17.0.4	9515b77d7d9c
root@9515b77d7d9c:/# root@sige:~#
root@sige:~# service   docker   restart
root@sige:~# docker  ps
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES
root@sige:~# docker  restart  cct1  cct2  cct3
cct1
cct2
cct3
root@sige:~# docker attach  cct3
root@9515b77d7d9c:/#
root@9515b77d7d9c:/#
root@9515b77d7d9c:/# ping  webtest
PING webtest (172.17.0.2) 56(84) bytes of data.
64 bytes from webtest (172.17.0.2): icmp_seq=1 ttl=64 time=0.061 ms
64 bytes from webtest (172.17.0.2): icmp_seq=2 ttl=64 time=0.041 ms
root@9515b77d7d9c:/# cat  /etc/hosts
127.0.0.1	localhost
::1	localhost ip6-localhost ip6-loopback
fe00::0	ip6-localnet
ff00::0	ip6-mcastprefix
ff02::1	ip6-allnodes
ff02::2	ip6-allrouters
172.17.0.2	webtest ad484ab693d6 cct1
172.17.0.4	9515b77d7d9c
root@9515b77d7d9c:/# env
# docker阻止容器之间的连接
root@sige:~# tail  -2   /etc/default/docker
#DOCKER_OPTS="-b=br1"
DOCKER_OPTS="--icc=false"
root@sige:~# service  docker  restart
root@sige:~# ps  -ef | grep  docker
root@sige:~# tail  -2   /etc/default/docker
#DOCKER_OPTS="-b=br1"
DOCKER_OPTS="--icc=false"
root@sige:~# service  docker  restart
root@sige:~# ps  -ef | grep  docker
root     25393     1  1 16:55 ?        00:00:00 /usr/bin/dockerd -H fd://
root     25416 25393  0 16:55 ?        00:00:00 docker-containerd -l unix:///var/run/docker/libcontainerd/docker-containerd.sock --metrics-interval=0 --start-timeout 2m --state-dir /var/run/docker/libcontainerd/containerd --shim docker-containerd-shim --runtime docker-runc
root     25579  4667  0 16:55 pts/19   00:00:00 grep --color=auto docker
root@sige:~# docker   restart   cct1  cct2  cct3
cct1
cct2
cct3
root@sige:~# docker  attach   cct3
root@9515b77d7d9c:/#
root@9515b77d7d9c:/# ping  webtest  #就不通了
root@sige:~# ps  -ef  |  grep  docker
root@sige:~# sysctl  net.ipv4.conf.all.forwarding
net.ipv4.conf.all.forwarding = 1
root@sige:~# sudo iptables  -L –n
root@sige:~# docker run  -it  -p  80  --name cct5  dormancypres/cct
root@82dce1abf412:/# nginx
root@82dce1abf412:/# root@sige:~#(ctrl+p，ctrl+q)
root@sige:~# docker  port  cct5
80/tcp -> 0.0.0.0:32768
root@sige:~# curl  127.0.0.1:32768
root@sige:~# docker  run  -it -p 80 --name cct6  dormancypres/cct
root@82dce1abf412:/# nginx
root@82dce1abf412:/# root@sige:~#(ctrl+p，ctrl+q)
root@sige:~#sudo iptables  -I   DOCKER   -s  10.211.55.3  -d  172.17.0.7  -p  TCP  --dport 80  -j  DORP
root@sige:~# sudo iptables  -L –n
root@sige:~# docker run  -it  -v  ~/datavolume:/data  ubuntu  /bin/bash
root@b626f5ae42d2:/# ls –l
root@b626f5ae42d2:/# touch  /data/c1
root@b626f5ae42d2:/# echo "I'm  in  container" > /data/c1
root@b626f5ae42d2:/# exit
exit
root@sige:~# ls -l  datavolume
total 4
-rw-r--r-- 1 root root 19 9æœˆ  10 15:34 c1
root@sige:~# cat   datavolume/c1
I'm  in  container


root@sige:~# docker ps  -l
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS                     PORTS               NAMES
b626f5ae42d2        ubuntu              "/bin/bash"         19 minutes ago      Exited (0) 2 minutes ago                       inspiring_allen
root@sige:~# docker  inspect  b626f5ae42d2
      "Mounts": [
            {
                "Type": "bind",
                "Source": "/root/datavolume",    #挂载了数据卷
                "Destination": "/data",
                "Mode": "",
                "RW": true,        #写权限
                "Propagation": ""
            }
        ],
root@sige:~# docker run  -it  -v  ~/datavolume:/data:ro --name dvt1   ubuntu  /bin/bash
root@e06348e6161e:/# ls –l  data/
root@e06348e6161e:/# touch  data/c2
touch: cannot touch 'data/c2': Read-only file system
root@e06348e6161e:/# ls data
c1
root@e06348e6161e:/# cat  data/c1
I'm  in  container
root@e06348e6161e:/# exit
root@sige:~#mkdir  -p  /dockerfile/dvt
root@sige:~/dockerfile/dvt# pwd
/root/dockerfile/dvt

root@sige:~/dockerfile/dvt# cat  Dockerfile
#for  Data volume  Test
FROM  ubuntu:14.04
VOLUME  ["/datavolume1","/datavolume2"]
CMD  /bin/bash
root@sige:~/dockerfile/dvt# docker  build  -t  dormancypres/dvt  .
root@sige:~/dockerfile/dvt# docker  run  --name  dvt3  -it  dormancypres/dvt
root@5497597b3ff3:/# ls
bin  boot  datavolume1  datavolume2  dev  etc  home  lib  lib64  media  mnt  opt  proc  root  run  sbin  srv  sys  tmp  usr  var
root@5497597b3ff3:/# exit
exit
root@sige:~/dockerfile/dvt# docker  inspect  dvt3
       "Mounts": [
            {
                "Type": "volume",
                "Name": "2dd0e5a9183a0a2824d156da4cf732587c03f1b5ee557d2b7cf1d8ebd8074b5d",
                "Source": "/var/lib/docker/volumes/2dd0e5a9183a0a2824d156da4cf732587c03f1b5ee557d2b7cf1d8ebd8074b5d/_data",
                "Destination": "/datavolume2",
                "Driver": "local",
                "Mode": "",
                "RW": true,
                "Propagation": ""
            },
            {
                "Type": "volume",
                "Name": "d28b50939cc5080635fa64d45446fb316c71cdfc455d47108213b5845ca27b15",
                "Source": "/var/lib/docker/volumes/d28b50939cc5080635fa64d45446fb316c71cdfc455d47108213b5845ca27b15/_data",
                "Destination": "/datavolume1",
                "Driver": "local",
                "Mode": "",
                "RW": true,
                "Propagation": ""
            }
        ],
root@sige:~# docker  run  -it --name  dvt5  dormancypres/dvt
root@16921f3f1116:/# ls
bin  boot  datavolume1  datavolume2  dev  etc  home  lib  lib64  media  mnt  opt  proc  root  run  sbin  srv  sys  tmp  usr  var
root@16921f3f1116:/# touch   datavolume1/dvt4_1
root@16921f3f1116:/# ls  /datavolume1
dvt4_1
root@16921f3f1116:/# exit
root@sige:~# docker  run  -it  --name  dvt6  --volumes-from  dvt5  ubuntu  /bin/bash    #挂在数据卷dvt5
root@c7cea517b40e:/# ls
bin  boot  datavolume1  datavolume2  dev  etc  home  lib  lib64  media  mnt  opt  proc  root  run  sbin  srv  sys  tmp  usr  var
root@c7cea517b40e:/# ls  /datavolume1
dvt4_1
root@c7cea517b40e:/# touch  /datavolume1/dvt5_1
root@c7cea517b40e:/# ls  /datavolume1
dvt4_1  dvt5_1
root@c7cea517b40e:/# exit

root@sige:~# docker  run  -it  --name  dvt7  --volumes-from  dvt5  ubuntu  /bin/bash
root@2f0e5e4f0f75:/# ls
bin  boot  datavolume1  datavolume2  dev  etc  home  lib  lib64  media  mnt  opt  proc  root  run  sbin  srv  sys  tmp  usr  var
root@2f0e5e4f0f75:/# ls /datavolume1
dvt4_1  dvt5_1
root@2f0e5e4f0f75:/# exit
exit
root@sige:~# docker  inspect  --format="{{.Volumes}}" dvt6

Template parsing error: template: :1:2: executing "" at <.Volumes>: map has no entry for key "Volumes"
root@sige:~# docker  inspect  --format="{{.Config.Volumes}}" dvt6
map[]
root@sige:~# docker  inspect  --format="{{.Mounts}}" dvt6
[{ 23f151124a49000c3255b0b7a6a39a582f417776e119223f9aa185c18ee95d3d /var/lib/docker/volumes/23f151124a49000c3255b0b7a6a39a582f417776e119223f9aa185c18ee95d3d/_data /datavolume1 local  true } { 012d1b8d750e6f1484424040553dbb2eb4cfd08d3aeabc1224f10d7170ed1873 /var/lib/docker/volumes/012d1b8d750e6f1484424040553dbb2eb4cfd08d3aeabc1224f10d7170ed1873/_data /datavolume2 local  true }]
root@sige:~# docker  inspect  --format="{{.Mounts}}" dvt7
[{ 23f151124a49000c3255b0b7a6a39a582f417776e119223f9aa185c18ee95d3d /var/lib/docker/volumes/23f151124a49000c3255b0b7a6a39a582f417776e119223f9aa185c18ee95d3d/_data /datavolume1 local  true } { 012d1b8d750e6f1484424040553dbb2eb4cfd08d3aeabc1224f10d7170ed1873 /var/lib/docker/volumes/012d1b8d750e6f1484424040553dbb2eb4cfd08d3aeabc1224f10d7170ed1873/_data /datavolume2 local  true }]
root@sige:~# docker  rm  dvt5
dvt5
root@sige:~# docker  restart  dvt6
dvt6
root@sige:~# docker   attach  dvt6
root@c7cea517b40e:/# ls
bin  boot  datavolume1  datavolume2  dev  etc  home  lib  lib64  media  mnt  opt  proc  root  run  sbin  srv  sys  tmp  usr  var
root@c7cea517b40e:/# ls  datavolume1
dvt4_1  dvt5_1
root@c7cea517b40e:/# touch  datavolume1/dvt5_2
root@c7cea517b40e:/# ls  datavolume1
dvt4_1  dvt5_1  dvt5_2
root@c7cea517b40e:/# exit
exit
root@sige:~# docker  run  --name  dvt8  dormancypres/dvt
root@sige:~# docker  run  --name  dvt9  -it --volumes-from  dvt8  ubuntu  /bin/bash
root@485fe558634f:/# ls
bin  boot  datavolume1  datavolume2  dev  etc  home  lib  lib64  media  mnt  opt  proc  root  run  sbin  srv  sys  tmp  usr  var
root@485fe558634f:/# touch  /datavolume1/dvt9_1
root@485fe558634f:/# ls /datavolume1
dvt9_1
root@485fe558634f:/# exit
exit
root@sige:~# docker  rm -v  dvt8
dvt8
root@sige:~# docker  restart  dvt9
dvt9
root@sige:~# docker  attach dvt9
root@485fe558634f:/# ls
bin  boot  datavolume1  datavolume2  dev  etc  home  lib  lib64  media  mnt  opt  proc  root  run  sbin  srv  sys  tmp  usr  var
root@485fe558634f:/# touch  datavolume1/dvt9_2
root@485fe558634f:/# ls  datavolume1
dvt9_1  dvt9_2
root@sige:~# docker  run  --volumes-from  dvt6  -v  ~/backup:/backup  --name  dvt10  ubuntu  tar  cvf  /backup/dvt6.tar  /datavolume1   #备份数据卷
tar: Removing leading `/' from member names
/datavolume1/
/datavolume1/dvt5_2
/datavolume1/dvt4_1
/datavolume1/dvt5_1
root@sige:~# ls  backup/
dvt6.tar
root@sige:~# docker  run  --volumes-from  dvt6  -v  ~/backup:/backup  --name  dvt10  ubuntu  tar  xvf  /backup/dvt6.tar  /datavolume1 #还原数据卷
2台ubuntu14.04
apt-get  install  bridge-utils
host1:10.211.55.3
host2:10.211.55.5

物理机
docker0：172.17.42.1
eth0:10.211.55.5
$sudo vim /etc/network/interfaces
auto  lo
iface br0 inet  loopback

auto br0
iface br0 inet static
address 10.211.55.5
netmask 255.255.255.0
gateway 10.211.55.1
bridge_ports eth0

$sudo vim /etc/default/docker
DOCKER_OPTS=“-b=br0  --fixed-cidr=10.211.55.128/26”

Reboot
#重启过后的物理机只有一个IP是br0
br0:10.211.55.5





ps  -ef | grep  docker
/usr/bin/docker  -d  -b=br0  --fixed-cidr='10.211.55.128/26'
docker  run  -it  ubuntu   /bin/bash
root@485fe558634f:/# ifconfig
                    eth0:10.211.55.129
root@485fe558634f:/# ping  10.211.55.3
root@485fe558634f:/# ping  www.baidu.com

另一台物理机：
eth0:10.211.55.3
$sudo vim /etc/network/interfaces
auto  lo
iface br0 inet  loopback

auto br0
iface br0 inet static
address 10.211.55.3
netmask 255.255.255.0
gateway 10.211.55.1
bridge_ports eth0

$sudo vim /etc/default/docker
DOCKER_OPTS=“-b=br0  --fixed-cidr=10.211.55.64/26”
reboot
ifconfig
br2:10.211.55.3
ps  -ef |  grep  docker
/usr/bin/docker  -d  -b=br2  --fixed-cidr='10.211.55.64/26'
docker  run  -it  ubuntu   /bin/bash
root@565fe558634f:/# ifconfig
                                       eth0:10.211.55.66
root@565fe558634f:/# ping 10.211.55.129
两台ubuntu14.04虚拟机
双网卡，host-only & NAT
安装Open vSwitch:
     apt-get  install  openvswitch-switch
安装网桥管理工具：
     apt-get  install  bridge-utils
IP地址：  Host1: 192.168.59.103
         Host2: 192.168.59.104

在物理机192.168.59.103Host1里：
docker0: 172.17.42.1
eth0:    192.168.59.103
eth1:    10.0.3.15   #NAT转发用
sudo  ovs-vsctl  show
#ovs_version:"2.0.2"
sudo  ovs-vsctl  add-br  obr0
sudo  ovs-vsctl  add-port obr0  gre0
sudo  ovs-vsctl  set  interface  gre0  type=gre  options:remote_ip=192.168.59.104
sudo  ovs-vsctl  show
sudo  brctl  addbr  br0
sudo  ifconfig br0 192.168.1.1  netmask  255.255.255.0
sudo  brctl  addif  br0  obr0
sudo  brctl  show
$ sudo vim /etc/default/docker
DOCKER_OPTS = “obr0 ”
$sudo service docker restart
$docker run -it ubuntu /bin/bash  :  建立一个容器
#ifcinfig  :   已经使用了刚刚确定的网络地址
192.168.1.2
#ping  192.168.59.104 另一台主机的ip（不使用gre协议是ping不通的）
ping  192.168.2.4  #不通
route
sudo  ip  route  add  192.168.2.0/24  via  192.168.59.104  dev  eth0
route
docker  run  -it  ubuntu  /bin/bash
ping  192.168.2.4 #通了
ifconfig
环境准备：https://www.cnblogs.com/yaowen/p/8431732.html
2台ubuntu虚拟机，双网卡：host-only 和 NAT，IP地址：Host1：192.168.59.103 和 192.168.59.104
操作：
1.安装weave
2.在安装weave的docker主机上启动weave，$weave launch
3.通过weave连接不同的主机
4.通过weave指定ip地址从而启动容器

$下载weave，并且保存在user/bin/weave文件夹下，  sudo wget -0 /usr/bin/weave http://raw.githubsercontent.com/zetttto/weave/master/weave（host1上）
$更改weave文件夹的格式，是他可以执行，sudo  chmod  a+x  /usr/bin/weave（host1上）
$weave launch  启动weave，会在docker中运行一个docker的容器，（host1上）
$docker ps -l   可以看到刚刚运行的docker容器（host1上）
以同样的方式，在另一台机器上操作。不过启动weave时使用host1的ip地址，$weave launch 192.168.59.104，这是为了使2个host正确的连在一起。（host2上）
$（host2上）启动一个容器  c2=$(weave  run  192.168.1.2/24  -it  ubuntu  /bin/bash)，192.168.1.2/24这个ip地址是我们在启动的容器中分配的ip地址，这个ip地址由weave来维护。将weave这条命令的返回值赋值给了c2这个变量，c2实际上就是启动容器的容器id，
$echo $c2  返回的就是运行的容器id
$docker  attach  $c2   进入这个容器，也可以在run命令里面指定name选项，后面根据这个name来进入容器
# ifconfig  现在已经进入容器中了，查看容器的网络设置，容器中多了一个网络设备ethwe，这个设备的ip地址就是运行weave中指定的ip地址，原有的docker0网桥分配的ip地址依然在容器中
$（host1上）启动一个容器，$ weave  run  192.168.1.10/24  -it  --name  wc1  ubuntu  /bin/bash，以name方式，192.168.10/24是与host2中运行的容器相同网段的ip地址，
$ docker attach wc1     进入容器
#ifconfig
#ping  192.168.1.2，可以ping通

使用weave工具可以非常容易的给docker容器指定一个任意希望分配的ip地址。并且非常方便的划分ip地址段，从而将不同主机的容器划分在不同的网段中。
Cat  Dockerfile
#first  dockerfile  for  test
FROM     ubuntu:14.04
MAINTAINER   dormancypres  “dormancypres@docker.com”
ENV    REFRESH_DATE  2015-04-01
RUN  apt-get  update &  apt-get install  -y  nginx
EXPOSE  80
Docker build  -t =”dormancypres/df_test1”.
Docker build  -t =”dormancypres/df_test1” –no-cache  .   #去掉缓存
容器生命周期管理
•	run
•	start/stop/restart
•	kill
•	rm
•	pause/unpause
•	create
•	exec
容器操作
•	ps
•	inspect
•	top
•	attach
•	events
•	logs
•	wait
•	export
•	port
容器rootfs命令
•	commit
•	cp
•	diff
镜像仓库
•	login
•	pull
•	push
•	search
本地镜像管理
•	images
•	rmi
•	tag
•	build
•	history
•	save
•	import
info|version
•	info
•	version
root@sige:~# docker  top  cct5
docker   history  dormancypres/df_test1
##############################################################
[root@test ~]# docker  images
repository          tag                 image id            created             size
hello-world         latest              bf756fb1ae65        7 months ago        13.3kb
[root@test ~]# docker  images  -a
repository          tag                 image id            created             size
hello-world         latest              bf756fb1ae65        7 months ago        13.3kb
[root@test ~]# docker  images  -q
bf756fb1ae65
[root@test ~]# docker  images  -qa
bf756fb1ae65
[root@test ~]# docker  images 
repository          tag                 image id            created             size
hello-world         latest              bf756fb1ae65        7 months ago        13.3kb
[root@test ~]# docker  images  --digests
repository          tag                 digest                                                                    image id            created             size
hello-world         latest              sha256:49a1c8800c94df04e9658809b006fd8a686cab8028d33cfba2cc049724254202   bf756fb1ae65        7 months ago        13.3kb
[root@test ~]# docker  images  --digests --no-trunc
repository          tag                 digest                                                                    image id                                                                  created             size
hello-world         latest              sha256:49a1c8800c94df04e9658809b006fd8a686cab8028d33cfba2cc049724254202   sha256:bf756fb1ae65adf866bd8c456593cd24beb6a0a061dedf42b26a993176745f6b   7 months ago        13.3kb
[root@test ~]# docker search  tomcat
[root@test ~]# docker search -s  30 tomcat
flag --stars has been deprecated, use --filter=stars=3 instead
name                description                                     stars               official            automated
tomcat              apache tomcat is an open source implementati…   2794                [ok]                
tomee               apache tomee is an all-apache java ee certif…   80                  [ok]                
dordoka/tomcat      ubuntu 14.04, oracle jdk 8 and tomcat 8 base…   54                                      [ok]
bitnami/tomcat      bitnami tomcat docker image                     35                                      [ok]
[root@test ~]# docker search -s  30 --no-trunc --automated  tomcat
flag --stars has been deprecated, use --filter=stars=3 instead
flag --automated has been deprecated, use --filter=is-automated=true instead
name                description                                                       stars               official            automated
dordoka/tomcat      ubuntu 14.04, oracle jdk 8 and tomcat 8 based docker container.   54                                      [ok]
bitnami/tomcat      bitnami tomcat docker image                                       35                                      [ok]
[root@test ~]# docker  pull  tomcat
docker  images 
docker  rmi   hello-world 
docker  rmi  -f  hello-world nginx
docker  rmi  -f $(docker images -qa)
docker pull  nginx
[root@test ~]# docker  ps  -l     #列出上一次跑的容器
container id        image               command             created             status                      ports               names
48605ab17079        831691599b88        "/bin/bash"         13 minutes ago      exited (0) 10 minutes ago                       magical_pasteur
[root@test ~]# docker  ps  -n  3  #列出上三次跑的容器
container id        image               command             created             status                      ports               names
48605ab17079        831691599b88        "/bin/bash"         14 minutes ago      exited (0) 11 minutes ago                       magical_pasteur
40bd19c9c5eb        831691599b88        "/bin/bash"         3 hours ago         exited (0) 15 minutes ago                       mystifying_vaughan
6ba8cbc524ac        hello-world         "/hello"            4 hours ago         exited (0) 4 hours ago                          sleepy_yonath
#docker  ps  -a:列出当前所有正在运行的容器+历史上运行过的
#docker  ps  -l:显示最近创建的容器
#docker  ps  -n:显示最近n个创建的容器
#docker  ps  -q:静默模式，只显示容器编号
#docker  ps  --no-trunc:不截断输出
[root@test ~]# docker  run  -it  --name mycentos0115  centos
[root@b25e29e59db1 /]#ctrl+p+q [root@test ~]#  不退出容器推出
[root@test ~]# docker  ps 
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES
b25e29e59db1        centos              "/bin/bash"         2 minutes ago       Up 2 minutes                            mycentos0115

[root@test ~]# docker  ps  -n  2
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS                      PORTS               NAMES
b25e29e59db1        centos              "/bin/bash"         4 minutes ago       Up 4 minutes                                    mycentos0115
48605ab17079        831691599b88        "/bin/bash"         32 minutes ago      Exited (0) 29 minutes ago                       magical_pasteur
[root@test ~]# docker  start  48605ab17079
48605ab17079
[root@test ~]# docker  ps 
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES
b25e29e59db1        centos              "/bin/bash"         5 minutes ago       Up 5 minutes                            mycentos0115
48605ab17079        831691599b88        "/bin/bash"         34 minutes ago      Up 3 seconds                            magical_pasteur
[root@test ~]# docker  restart  b25e29e59db1
[root@test ~]# docker  ps 
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES
b25e29e59db1        centos              "/bin/bash"         7 minutes ago       Up 1 second                             mycentos0115
48605ab17079        831691599b88        "/bin/bash"         36 minutes ago      Up About a minute                       magical_pasteur
[root@test ~]# docker  stop  b25e29e59db1
b25e29e59db1
[root@test ~]# docker  ps 
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES
48605ab17079        831691599b88        "/bin/bash"         37 minutes ago      Up 3 minutes                            magical_pasteur
[root@test ~]# docker  kill  48605ab17079   #强制停止容器
48605ab17079
[root@test ~]# docker  ps 
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES
[root@test ~]# docker rm  48605ab17079   #删除容器  rmi的i是image镜像不加i是删除容器
48605ab17079
[root@test ~]# docker  ps  -n  2
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS                      PORTS               NAMES
b25e29e59db1        centos              "/bin/bash"         12 minutes ago      Exited (0) 3 minutes ago                        mycentos0115
40bd19c9c5eb        831691599b88        "/bin/bash"         4 hours ago         Exited (0) 42 minutes ago                       mystifying_vaughan
一次性删除多个容器:docker rm -f $(docker ps -a -q)或者docker ps -a -q|xargs docker rm 
[root@test ~]# docker run  -d centos /bin/sh -c "while true;do echo hello zzyy;sleep 2;done"
1aecf3a0803fa676af36e0e6b704802a46566c9794fc8acae2ff9c0ccf3121cf
[root@test ~]# docker  ps 
CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS               NAMES
1aecf3a0803f        centos              "/bin/sh -c 'while t…"   11 seconds ago      Up 10 seconds                           eager_chebyshev
[root@test ~]# docker logs -t -f  --tail  3 1aecf3a0803f
2020-08-02T11:58:43.254466670Z hello zzyy
2020-08-02T11:58:45.258272771Z hello zzyy
2020-08-02T11:58:47.265417005Z hello zzyy
2020-08-02T11:58:49.274342224Z hello zzyy
2020-08-02T11:58:51.280333097Z hello zzyy
2020-08-02T11:58:53.285258147Z hello zzyy
[root@test ~]# docker ps 
CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS               NAMES
1aecf3a0803f        centos              "/bin/sh -c 'while t…"   5 minutes ago       Up 5 minutes                            eager_chebyshev
[root@test ~]# docker  top  1aecf3a0803f
UID                 PID                 PPID                C                   STIME               TTY                 TIME                CMD
root                31941               31925               0                   19:56               ?                   00:00:00            /bin/sh -c while true;do echo hello zzyy;sleep 2;done
root                32261               31941               0                   20:02               ?                   00:00:00            /usr/bin/coreutils --coreutils-prog-shebang=sleep /usr/bin/sleep 2
[root@test ~]# docker inspect 1aecf3a0803f
[root@test ~]# docker run -it  centos /bin/bash
[root@test ~]# docker  attach 796e54bd0ba9
[root@796e54bd0ba9 /]#
[root@test ~]# docker ps 
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES
796e54bd0ba9        centos              "/bin/bash"         2 minutes ago       Up 2 minutes                            trusting_tharp
[root@test ~]# docker exec -t 796e54bd0ba9 ls -l /tmp
total 8
-rwx------. 1 root root 1379 Jun 11 02:35 ks-script-585nin8f
-rwx------. 1 root root  671 Jun 11 02:35 ks-script-z6zw_bhq
[root@test ~]# docker exec -it 796e54bd0ba9 ls -l /tmp
total 8
-rwx------. 1 root root 1379 Jun 11 02:35 ks-script-585nin8f
-rwx------. 1 root root  671 Jun 11 02:35 ks-script-z6zw_bhq
[root@test ~]# docker exec -it 796e54bd0ba9  /bin/bash 
[root@796e54bd0ba9 /]# ls -l /tmp
total 8
-rwx------. 1 root root 1379 Jun 11 02:35 ks-script-585nin8f
-rwx------. 1 root root  671 Jun 11 02:35 ks-script-z6zw_bhq
[root@test ~]# docker  ps 
CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS               NAMES
e0e054f29e87        centos              "/bin/sh -c 'while t…"   5 seconds ago       Up 4 seconds                            wizardly_bhaskara
[root@test ~]# docker run -it  centos /bin/bash
[root@7acff94911db /]# cd  /tmp
[root@7acff94911db tmp]# ls
ks-script-585nin8f  ks-script-z6zw_bhq
[root@7acff94911db tmp]# exit
[root@test ~]# docker cp e0e054f29e87:/tmp/ks-script-585nin8f  /root
[root@test ~]# ls
anaconda-ks.cfg  ks-script-585nin8f  vmware-tools-distrib
[root@test ~]# docker images tomcat 
REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
tomcat              latest              9a9ad4f631f8        4 days ago          647MB
[root@test ~]# docker run -it -p 8888:8080  tomcat   
#http://localhost:8888  访问8888就是访问8080
[root@test ~]# docker run -it -P tomcat 
#-P随机分配端口32768到8080,http://localhost:32768
[root@test ~]# docker  ps  -n 5
CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS                        PORTS                     NAMES
2c71bd3c0bb7        tomcat              "catalina.sh run"        28 seconds ago      Up 27 seconds                 0.0.0.0:32768->8080/tcp   wonderful_yonath
564184a974ac        tomcat              "catalina.sh run"        5 minutes ago       Exited (130) 3 minutes ago                              keen_lamport
7acff94911db        centos              "/bin/bash"              33 minutes ago      Exited (0) 32 minutes ago                               infallible_northcutt
e0e054f29e87        centos              "/bin/sh -c 'while t…"   33 minutes ago      Up 33 minutes                                           wizardly_bhaskara
1358823cd9ab        centos              "/bin/sh -c 'while t…"   35 minutes ago      Exited (137) 34 minutes ago                             confident_taussig
[root@test ~]# docker  ps 
CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                    NAMES
f2c7cbcdc7dc        tomcat              "catalina.sh run"        4 minutes ago       Up 4 minutes        0.0.0.0:8888->8080/tcp   stupefied_bhaskara
e0e054f29e87        centos              "/bin/sh -c 'while t…"   45 minutes ago      Up 45 minutes                                wizardly_bhaskara
[root@test ~]# docker exec -it  f2c7cb  /bin/bash 
root@f2c7cbcdc7dc:/usr/local/tomcat#
[root@test ~]# docker  ps 
CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                    NAMES
f2c7cbcdc7dc        tomcat              "catalina.sh run"        4 minutes ago       Up 4 minutes        0.0.0.0:8888->8080/tcp   stupefied_bhaskara
e0e054f29e87        centos              "/bin/sh -c 'while t…"   45 minutes ago      Up 45 minutes                                wizardly_bhaskara
[root@test ~]# docker commit -a="sige" -m="tomcat without docs" f2c7cbcdc7dc atguigu/mytomcat:1.2
sha256:f0737009039ef3597a4181b7efa75640172a097629c6c29dc6893aa6c8eababa
[root@test ~]# docker images
REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
atguigu/mytomcat    1.2                 f0737009039e        8 seconds ago       647MB
mongo               latest              aa22d67221a0        2 days ago          493MB
tomcat              latest              9a9ad4f631f8        4 days ago          647MB
nginx               latest              8cf1bfb43ff5        11 days ago         132MB
centos              latest              831691599b88        6 weeks ago         215MB
hello-world         latest              bf756fb1ae65        7 months ago        13.3kB
[root@test ~]# docker rm  -f $(docker ps -q)
f2c7cbcdc7dc
e0e054f29e87
[root@test ~]# docker search  tomcat 
[root@test ~]# docker images
REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
atguigu/mytomcat    1.2                 f0737009039e        4 minutes ago       647MB
mongo               latest              aa22d67221a0        2 days ago          493MB
tomcat              latest              9a9ad4f631f8        4 days ago          647MB
nginx               latest              8cf1bfb43ff5        11 days ago         132MB
centos              latest              831691599b88        6 weeks ago         215MB
hello-world         latest              bf756fb1ae65        7 months ago        13.3kB
[root@test ~]# docker run  -it -p 7777:8080 atguigu/mytomcat:1.2
[root@test ~]# docker run  -it -p 7788:8080  tomcat
[root@test ~]# docker run -d  -p 6666:8080  tomcat    #以后台运行
d4d1696f4ead4e6ee898d6e3ab110fafcc7da0e6c3ec479916f3fac45c1106d7
[root@test ~]# docker ps 
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS                    NAMES
d4d1696f4ead        tomcat              "catalina.sh run"   11 seconds ago      Up 10 seconds       0.0.0.0:6666->8080/tcp   great_kapitsa
[root@test ~]# docker images
REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
atguigu/mytomcat    1.2                 f0737009039e        About an hour ago   647MB
mongo               latest              aa22d67221a0        2 days ago          493MB
tomcat              latest              9a9ad4f631f8        4 days ago          647MB
nginx               latest              8cf1bfb43ff5        11 days ago         132MB
centos              latest              831691599b88        6 weeks ago         215MB
hello-world         latest              bf756fb1ae65        7 months ago        13.3kB
[root@test ~]# docker run -it -v  /myDataVolume:/dataVolumeContainer  centos
                              虚拟机          容器里     
同时创建了2个文件
[root@test ~]# docker  ps 
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES
2dddba4971c5        centos              "/bin/bash"         2 minutes ago       Up 2 minutes                            loving_dijkstra
[root@test ~]# docker  ps 
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES
[root@test ~]# docker  ps -l 
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS                     PORTS               NAMES
2dddba4971c5        centos              "/bin/bash"         15 minutes ago      Exited (0) 2 minutes ago                       loving_dijkstra
[root@test ~]# docker  start 2dddba4971c5
2dddba4971c5
[root@test ~]# docker ps 
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES
2dddba4971c5        centos              "/bin/bash"         15 minutes ago      Up 3 seconds                            loving_dijkstra
[root@test ~]# docker attach  2dddba4971c5
[root@2dddba4971c5 /]# cd /dataVolumeContainer/
[root@2dddba4971c5 dataVolumeContainer]# ls
container.txt  host.txt  host02.txt
[root@2dddba4971c5 dataVolumeContainer]# cat host.txt 
container update 01
host update 01
[root@2dddba4971c5 dataVolumeContainer]#
[root@test ~]# docker inspect 2dddba4971c5
        "Mounts": [
            {
                "Type": "bind",
                "Source": "/myDataVolume",
                "Destination": "/dataVolumeContainer",
                "Mode": "",
                "RW": true,      #有读写权限
                "Propagation": "rprivate"
            }
        ],
在主机文件夹里创建的文件在容器里也能看到,退出容器了，也能同步数据
docker run -it 镜像名
docker run -it -v  /myDataVolume:/dataVolumeContainer  –privileged=true  镜像名  
docker run -it -v  /宿主机绝对路径目录:/容器内目录:ro   镜像名
docker run -it -v  /myDataVolume:/dataVolumeContainer:ro  centos
#容器里只能看到宿主机新建的文件，容器里不能修改和添加，只能看
[root@test /]# mkdir mydocker
[root@test /]# cd  mydocker
[root@test mydocker]# pwd
/mydocker



[root@test mydocker]# cat  Dockerfile
#volume test 
FROM centos 
VOLUME ["/dataVolumeContainer1","dataVolumeContainer2"]
CMD echo "finished,--------success1"
CMD /bin/bash
就相当于
#docker run -it -v /host1: /dataVolumeContainer1 -v /host2: /dataVolumeContainer2 centos /bin/bash 
[root@test mydocker]# docker build -f /mydocker/Dockerfile -t  zzyy/centos .
[root@test mydocker]# docker images zzyy/centos
REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
zzyy/centos         latest              aff9f18e3f11        2 minutes ago       215MB
[root@test mydocker]# docker run -it zzyy/centos
[root@78d4e82a3a17 /]# ls
bin  dataVolumeContainer1  dataVolumeContainer2  dev  etc  home  lib  lib64  lost+found  media	mnt  opt  proc	root  run  sbin  srv  sys  tmp	usr  var
[root@78d4e82a3a17 /]# cd dataVolumeContainer1
[root@78d4e82a3a17 dataVolumeContainer1]# touch  container01.txt
[root@78d4e82a3a17 dataVolumeContainer1]# ls
container01.txt
[root@test ~]# docker ps 
CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS               NAMES
78d4e82a3a17        zzyy/centos         "/bin/sh -c /bin/bash"   2 minutes ago       Up 2 minutes                            charming_cerf
[root@test ~]# docker inspect  78d4e82a3a17
        "Mounts": [
            {
                "Type": "volume",
                "Name": "17492b42b2cce578e5be232f5207ecf12eb8bcc76038dec2b8c75ae9e925082b",
                "Source": "/var/lib/docker/volumes/17492b42b2cce578e5be232f5207ecf12eb8bcc76038dec2b8c75ae9e925082b/_data",
                "Destination": "/dataVolumeContainer1",
                "Driver": "local",
                "Mode": "",
                "RW": true,
                "Propagation": ""
            },
            {
                "Type": "volume",
                "Name": "76b007f338c88e2075742181d52eef8b051c02013d6ed36ede0030a668eb54a4",
                "Source": "/var/lib/docker/volumes/76b007f338c88e2075742181d52eef8b051c02013d6ed36ede0030a668eb54a4/_data",
                "Destination": "dataVolumeContainer2",
                "Driver": "local",
                "Mode": "",
                "RW": true,
                "Propagation": ""
            }
        ],
[root@test~]#cd  /var/lib/docker/volumes/17492b42b2cce578e5be232f5207ecf12eb8bcc76038dec2b8c75ae9e925082b/_data
[root@test _data]# ls
container01.txt
[root@test _data]# cat container01.txt 
[root@test _data]# touch  host.txt
[root@test _data]# ls
container01.txt  host.txt
[root@78d4e82a3a17 dataVolumeContainer1]# ls   #容器里也看到了
container01.txt  host.txt
[root@test /]# docker run  -it --name dc01 zzyy/centos
[root@6759dddb97e6 /]# ls
bin  dataVolumeContainer1  dataVolumeContainer2  dev  etc  home  lib  lib64  lost+found  media	mnt  opt  proc	root  run  sbin  srv  sys  tmp	usr  var
[root@6759dddb97e6 /]# cd  dataVolumeContainer2
[root@6759dddb97e6 dataVolumeContainer2]# touch dc01_add.txt
[root@6759dddb97e6 dataVolumeContainer2]# [root@test /]# 
[root@test /]# docker ps 
CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS               NAMES
6759dddb97e6        zzyy/centos         "/bin/sh -c /bin/bash"   51 seconds ago      Up 50 seconds                           dc01
[root@test /]# docker run  -it --name dc02 --volumes-from dc01  zzyy/centos
[root@be51d418bd2f /]# cd dataVolumeContainer2
[root@be51d418bd2f dataVolumeContainer2]# ls
dc01_add.txt
[root@be51d418bd2f dataVolumeContainer2]# touch dc02_add.txt
[root@be51d418bd2f dataVolumeContainer2]# cd dataVolumeContainer2[root@test /]# ctrl+p+q
[root@test /]# docker  ps 
CONTAINER ID        IMAGE               COMMAND                  CREATED              STATUS              PORTS               NAMES
be51d418bd2f        zzyy/centos         "/bin/sh -c /bin/bash"   About a minute ago   Up About a minute                       dc02
6759dddb97e6        zzyy/centos         "/bin/sh -c /bin/bash"   3 minutes ago        Up 3 minutes                            dc01
[root@test /]# docker run  -it --name dc03 --volumes-from dc01  zzyy/centos
[root@e0fdd23f3c36 /]# cd  dataVolumeContainer2
[root@e0fdd23f3c36 dataVolumeContainer2]# ls
dc01_add.txt  dc02_add.txt
[root@e0fdd23f3c36 dataVolumeContainer2]# touch dc03_add.txt
[root@e0fdd23f3c36 dataVolumeContainer2]# ls
dc01_add.txt  dc02_add.txt  dc03_add.txt
[root@e0fdd23f3c36 dataVolumeContainer2]# [root@test /]# 
[root@test /]# docker ps 
CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS               NAMES
e0fdd23f3c36        zzyy/centos         "/bin/sh -c /bin/bash"   53 seconds ago      Up 52 seconds                           dc03
be51d418bd2f        zzyy/centos         "/bin/sh -c /bin/bash"   2 minutes ago       Up 2 minutes                            dc02
6759dddb97e6        zzyy/centos         "/bin/sh -c /bin/bash"   5 minutes ago       Up 5 minutes                            dc01
[root@test /]# docker attach dc01
[root@6759dddb97e6 dataVolumeContainer2]# pwd
/dataVolumeContainer2
[root@6759dddb97e6 dataVolumeContainer2]# ls
dc01_add.txt  dc02_add.txt  dc03_add.txt
[root@test /]# docker  ps 
CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS               NAMES
e0fdd23f3c36        zzyy/centos         "/bin/sh -c /bin/bash"   3 minutes ago       Up 3 minutes                            dc03
be51d418bd2f        zzyy/centos         "/bin/sh -c /bin/bash"   5 minutes ago       Up 5 minutes                            dc02
6759dddb97e6        zzyy/centos         "/bin/sh -c /bin/bash"   7 minutes ago       Up 7 minutes                            dc01
[root@test /]# docker attach  dc02
[root@be51d418bd2f dataVolumeContainer2]# ls
dc01_add.txt  dc02_add.txt  dc03_add.txt
[root@be51d418bd2f dataVolumeContainer2]# read escape sequence(ctrl+p+q)
[root@test /]# docker  ps 
CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS               NAMES
e0fdd23f3c36        zzyy/centos         "/bin/sh -c /bin/bash"   4 minutes ago       Up 4 minutes                            dc03
be51d418bd2f        zzyy/centos         "/bin/sh -c /bin/bash"   5 minutes ago       Up 5 minutes                            dc02
6759dddb97e6        zzyy/centos         "/bin/sh -c /bin/bash"   8 minutes ago       Up 8 minutes                            dc01
[root@test /]# docker rm  -f  dc01 
dc01
[root@test /]# docker ps 
CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS               NAMES
e0fdd23f3c36        zzyy/centos         "/bin/sh -c /bin/bash"   4 minutes ago       Up 4 minutes                            dc03
be51d418bd2f        zzyy/centos         "/bin/sh -c /bin/bash"   6 minutes ago       Up 6 minutes                            dc02
[root@test /]# docker attach dc02
[root@be51d418bd2f dataVolumeContainer2]# ls
dc01_add.txt  dc02_add.txt  dc03_add.txt
[root@be51d418bd2f dataVolumeContainer2]# touch dc02_update.txt
[root@be51d418bd2f dataVolumeContainer2]# ls
dc01_add.txt  dc02_add.txt  dc02_update.txt  dc03_add.txt
[root@be51d418bd2f dataVolumeContainer2]# read escape sequence
[root@test /]# docker attach dc03
[root@e0fdd23f3c36 dataVolumeContainer2]# ls
dc01_add.txt  dc02_add.txt  dc02_update.txt  dc03_add.txt
DockerFile: FROM,  基础镜像，当前新镜像是基于哪个镜像的
MAINTAINER, 镜像维护者的姓名和邮箱地址  
RUN.   容器构建时需要运行的命令     
EXPOSE, 当前容器对外暴露出的端口
WORKDIR, 
ENV,
ADD,
COPY,
VOLUME,
CMD,
ENTRYPOINT,
ONBUILD
[root@test mydocker]# pwd
/mydocker
[root@test mydocker]# cat Dockerfile2
FROM  centos 
MAINTAINER  zzyy<zzyy167@126.com>

ENV  MYPATH /usr/local 
WORKDIR  $MYPATH 


RUN   yum  -y  install  vim  
RUN  yum  -y  install net-tools

EXPOSE  80  

CMD  echo $MYPATH 
CMD  echo "success.....................ok"
CMD  /bin/bash
[root@test mydocker]# docker build -f /mydocker/Dockerfile2  -t  mycentos:1.3  .
[root@test mydocker]# docker images mycentos
REPOSITORY          TAG                 IMAGE ID            CREATED              SIZE
mycentos            1.3                 76f457ac9e02        About a minute ago   295MB
[root@test mydocker]# docker run -it mycentos:1.3
[root@5df60857c9ed local]# pwd 
/usr/local
[root@5df60857c9ed local]# vim  test.txt
[root@5df60857c9ed local]# ifconfig 
eth0: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500
        inet 172.17.0.2  netmask 255.255.0.0  broadcast 172.17.255.255
        ether 02:42:ac:11:00:02  txqueuelen 0  (Ethernet)
[root@test ~]# docker  images  mycentos
REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
mycentos            1.3                 76f457ac9e02        7 minutes ago       295MB
[root@test ~]# docker history 76f457ac9e02
IMAGE               CREATED             CREATED BY                                      SIZE                COMMENT
76f457ac9e02        7 minutes ago       /bin/sh -c #(nop)  CMD ["/bin/sh" "-c" "/bin…   0B                  
81f67e465c67        7 minutes ago       /bin/sh -c #(nop)  CMD ["/bin/sh" "-c" "echo…   0B                  
1e1ab391bb9d        7 minutes ago       /bin/sh -c #(nop)  CMD ["/bin/sh" "-c" "echo…   0B                  
d56b51589bc5        7 minutes ago       /bin/sh -c #(nop)  EXPOSE 80                    0B                  
7b442940220e        7 minutes ago       /bin/sh -c yum  -y  install net-tools           22.8MB              
ba9d9d3cb403        7 minutes ago       /bin/sh -c yum  -y  install  vim                57.3MB              
e91ca1cbedbe        7 minutes ago       /bin/sh -c #(nop) WORKDIR /usr/local            0B                  
98ee21ab40f4        7 minutes ago       /bin/sh -c #(nop)  ENV MYPATH=/usr/local        0B                  
59a0b3cd9082        7 minutes ago       /bin/sh -c #(nop)  MAINTAINER zzyy<zzyy167@1…   0B                  
831691599b88        6 weeks ago         /bin/sh -c #(nop)  CMD ["/bin/bash"]            0B                  
<missing>           6 weeks ago         /bin/sh -c #(nop)  LABEL org.label-schema.sc…   0B                  
<missing>           6 weeks ago         /bin/sh -c #(nop) ADD file:84700c11fcc969ac0…   215MB
[root@test mydocker]# pwd
/mydocker
[root@test mydocker]# vim  Dockerfile3
[root@test mydocker]# cat   Dockerfile3
FROM centos 
RUN  yum  install  -y curl 
CMD  [ "curl", "-s", "http://ip.cn" ] 
[root@test mydocker]# 
[root@test mydocker]# docker build -f /mydocker/Dockerfile3  -t myip .
[root@test mydocker]# docker images myip 
REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
myip                latest              dbea2f9f5d3c        23 seconds ago      235MB
[root@test mydocker]# docker run  -it myip
[root@test mydocker]# cat  Dockerfile4
FROM centos 
RUN  yum  install  -y curl 
ENTRYPOINT  [ "curl", "-s", "http://ip.cn" ] 
[root@test mydocker]# docker build -f /mydocker/Dockerfile4  -t  myip2 .
[root@test mydocker]# docker run  myip2  -i  #追加参数
[root@test mydocker]# cat  Dockerfile4
FROM centos 
RUN  yum  install  -y curl 
ENTRYPOINT  [ "curl", "-s", "http://ip.cn" ]
ONBUILD  RUN  echo "father images  onbuild......886" 
[root@test mydocker]# docker build -f /mydocker/Dockerfile4  -t  myip_father .
[root@test mydocker]# cp  Dockerfile3  Dockerfile5
[root@test mydocker]# ls
Dockerfile  Dockerfile2  Dockerfile3  Dockerfile4  Dockerfile5
[root@test mydocker]# vim  Dockerfile5
[root@test mydocker]# cat   Dockerfile5
FROM  myip_father 
RUN  yum  install  -y curl 
CMD  [ "curl", "-s", "http://ip.cn" ] 
[root@test mydocker]# docker build -f /mydocker/Dockerfile5  -t  myip_son .
Sending build context to Docker daemon  6.144kB
Step 1/3 : FROM  myip_father
# Executing 1 build trigger
 ---> Running in 0f83e2372220
father images  onbuild......886
Removing intermediate container 0f83e2372220
[root@test tomcat9]# pwd
/zzyyuse/mydockerfile/tomcat9
[root@test tomcat9]# cat   Dockerfile
FROM  centos 
MAINTAINER  zzyy<zzyybs@126.com>
#把宿主机当前上下文的c.txt拷贝到容器/usr/local/路径下
COPY c.txt /usr/local/cincontainer.txt 
#把java与tomcat添加到容器中
#移动并解压包到/usr/local
ADD jdk-8u171-linux-x64.tar.gz  /usr/local   
ADD apache-tomcat-9.0.8.tar.gz  /usr/local 
#安装vim编辑器
RUN yum  -y  install vim  
#设置工作访问时候的WORKDIR路径，登录落脚点
ENV MYPATH /usr/local
WORKDIR  $MYPATH  
#配置java与tomcat环境变量
ENV JAVA_HOME  /usr/local/jdk1.8.0_171
ENV CLASSPATH  $JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar 
ENV CATALINA_HOME /usr/local/apache-tomcat-9.0.8 
ENV CATALINA_BASE /usr/local/apache-tomcat-9.0.8
ENV PATH $PATH:$JAVA_HOME/bin:$CATALINA_HOME/lib:$CATALINA_HOME/bin 
#容器运行时监听的端口
EXPOSE 8080 
#启动时运行tomcat 
#ENTRYPOINT ["/usr/local/apache-tomcat-9.0.8/bin/startup.sh"]
#CMD ["/usr/local/apache-tomcat-9.0.8/bin/catalina.sh", "run"]
CMD /usr/local/apache-tomcat-9.0.8/bin/startup.sh && tail  -F  /usr/local/apache-tomcat-9.0.8/bin/logs/catalina.out 
 
[root@test tomcat9]# docker build  -t zzyytomcat9 .
Sending build context to Docker daemon  3.584kB
^C
[root@test tomcat9]# docker images zzyytomcat9

[root@test tomcat9]# docker run  -d -p 9080:8080 --name myt9 
-v  /zzyyuse/mydockerfile/tomcat9/test:/usr/local/apache-tomcat-9.0.8/webapps/test  
-v  /zzyyuse/mydockerfile/tomcat9/tomcat9logs: /usr/local/apache-tomcat-9.0.8/logs 
--privileged=true zzyytomcat9   
#--privileged=true这个是添加读写的权限
docker ps  
docker exec $(docker ps -q)  ls -l 
docker exec $(docker ps -q)  java -version 
docker restart $(docker ps -q)
[root@test ~]# docker  search  mysql
[root@test ~]# docker pull mysql:5.6
[root@test ~]# docker images  mysql
REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
mysql               5.6                 a599e29874aa        11 days ago         302MB                 #版本
docker rm  -f  $(docker ps -q)
[root@test ~]# docker run -p 123456:3306 --name mysql -v /zzyyuse/mysql/conf:/etc/mysql/conf.d  -v /zzyyuse/mysql/logs:/logs -v /zzyyuse/mysql/data:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=123456  -d  mysql:5.6
[root@test ~]# docker run  --net=host  --name mysql -v /zzyyuse/mysql/conf:/etc/mysql/conf.d  -v /zzyyuse/mysql/logs:/logs -v /zzyyuse/mysql/data:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=123456  -d  mysql:5.6 
e128a067c788bec45ed04fb137f878451a39e07e991507211c7ed7143aa8cc1c
[root@test ~]# docker  ps 
CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS               NAMES
e128a067c788        mysql:5.6           "docker-entrypoint.s…"   3 minutes ago       Up 6 seconds                            mysql
a3f73d65d346        centos              "/bin/bash"              38 minutes ago      Up 38 minutes                           unruffled_jennings
[root@test ~]# docker exec -it e128a067c788  /bin/bash
root@test:/# mysql  -uroot -p
mysql> show databases;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| mysql              |
| performance_schema |
| test               |
+--------------------+
4 rows in set (0.00 sec)

mysql> create database db01;
Query OK, 1 row affected (0.01 sec)

mysql> use db01;
Database changed
mysql> create table t_book(id int not null primary key,bookName varchar(20));
Query OK, 0 rows affected (0.02 sec)

mysql> show  tables;
+----------------+
| Tables_in_db01 |
+----------------+
| t_book         |
+----------------+
1 row in set (0.00 sec)

mysql> insert into t_book values(1, "java");
Query OK, 1 row affected (0.00 sec)

mysql> select *  from t_book;
+----+----------+
| id | bookName |
+----+----------+
|  1 | java     |
+----+----------+
1 row in set (0.00 sec)
[root@test ~]# docker  ps 
CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS               NAMES
e128a067c788        mysql:5.6           "docker-entrypoint.s…"   12 minutes ago      Up 8 minutes                            mysql
a3f73d65d346        centos              "/bin/bash"              47 minutes ago      Up 47 minutes                           unruffled_jennings

[root@test ~]# docker rm -f a3f73d65d346
a3f73d65d346
[root@test ~]# docker  ps 
CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS               NAMES
e128a067c788        mysql:5.6           "docker-entrypoint.s…"   12 minutes ago      Up 9 minutes                            mysql
[root@test ~]# docker exec $(docker ps -q) sh -c 'exec mysqldump --all-databases -uroot -p"123456"' > /zzyyuse/all-databases.sql
Warning: Using a password on the command line interface can be insecure.
mysqldump: Got error: 1045: Access denied for user 'root'@'localhost' (using password: YES) when trying to connect
[root@test ~]# docker exec $(docker ps -q) sh -c 'exec mysqldump --all-databases -uroot -p ' > /zzyyuse/all-databases.sql
Enter password: [root@test ~]# 
[root@test ~]# 
[root@test ~]# cd  /zzyyuse/ 
[root@test zzyyuse]# ls
all-databases.sql  mydockerfile  mysql
[root@test zzyyuse]# vim all-databases.sql
[root@test ~]# docker pull redis:3.2
[root@test ~]# docker images redis
REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
redis               3.2                 87856cc39862        21 months ago       76MB
[root@test ~]# docker run -p 6379:6379 -v /zzyyuse/myredis/data:/data -v /zzyyuse/myredis/conf/redis.conf:/usr/local/etc/redis/redis.conf -d redis:3.2 redis-server /usr/local/etc/redis/redis.conf –appendonly yes
docker ps 
docker exec -it redis容器ID redis-cli 
set k1 v1 
set k2 v2 
set k3 c3 
shutdown 
[root@test ~]# docker images mycentos 
REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
mycentos            1.3                 76f457ac9e02        23 hours ago        295MB
[root@test ~]# docker run -it mycentos:1.3
[root@5797e852618f local]# [root@test ~]# 
[root@test ~]# docker ps 
CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS               NAMES
5797e852618f        mycentos:1.3        "/bin/sh -c /bin/bash"   9 seconds ago       Up 7 seconds        80/tcp              unruffled_cerf
e128a067c788        mysql:5.6           "docker-entrypoint.s…"   33 minutes ago      Up 30 minutes                           mysql
[root@test ~]# docker commit -a zzyy -m "new mycentos1.4 with vim and ifconfig"  5797e852618f mycentos:1.4
sha256:c0d62a3d5668b25c06267fe784b7e7229a323ed8a13bd716c0f1048b56cf36e3
[root@test ~]# docker images mycentos
REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
mycentos            1.4                 c0d62a3d5668        21 seconds ago      295MB
mycentos            1.3                 76f457ac9e02        23 hours ago        295MB
[root@test ~]# docker login --username=registry.cn-hangzhou.aliyuncs.com
Password: 
[root@test ~]# docker tag   c0d62a3d5668  registry.cn-hangzhou.aliyuncs.com/zzyybuy/mycentos:1.4.1
[root@test ~]# docker push  registry.cn-hangzhou.aliyuncs.com/zzyybuy/mycentos:1.4.1
[root@test ~]# docker images registry.cn-hangzhou.aliyuncs.com/zzyybuy/mycentos
REPOSITORY                                           TAG                 IMAGE ID            CREATED             SIZE
registry.cn-hangzhou.aliyuncs.com/zzyybuy/mycentos   1.4.1               c0d62a3d5668        12 minutes ago      295MB
[root@test ~]# docker rmi -f registry.cn-hangzhou.aliyuncs.com/zzyybuy/mycentos:1.4.1
Untagged: registry.cn-hangzhou.aliyuncs.com/zzyybuy/mycentos:1.4.1
[root@test ~]# docker images
[root@test ~]# docker pull  registry.cn-hangzhou.aliyuncs.com/zzyybuy/mycentos:1.4.1
[root@test ~]# docker images
REPOSITORY                                           TAG                 IMAGE ID            CREATED             SIZE
mycentos                                             1.4                 c0d62a3d5668        17 minutes ago      295MB
myip_son                                             latest              de07b8f0323b        23 hours ago        245MB
myip_father                                          latest              0ea3a7a70221        23 hours ago        235MB
myip2                                                latest              cc59c79e0319        23 hours ago        235MB
myip                                                 latest              dbea2f9f5d3c        23 hours ago        235MB
mycentos                                             1.3                 76f457ac9e02        24 hours ago        295MB
zzyy/centos                                          latest              aff9f18e3f11        25 hours ago        215MB
atguigu/mytomcat                                     1.2                 f0737009039e        28 hours ago        647MB
mongo                                                latest              aa22d67221a0        3 days ago          493MB
tomcat                                               latest              9a9ad4f631f8        5 days ago          647MB
mysql                                                5.6                 a599e29874aa        11 days ago         302MB
nginx                                                latest              8cf1bfb43ff5        12 days ago         132MB
centos                                               latest              831691599b88        6 weeks ago         215MB
hello-world                                          latest              bf756fb1ae65        7 months ago        13.3kB
redis                                                3.2                 87856cc39862        21 months ago       76MB
registry.cn-hangzhou.aliyuncs.com/zzyybuy/mycentos   1.4.1               a266d818788e        2 years ago         359MB
[root@test ~]# docker run -it a266d818788e  /bin/bash
[root@b9e3f4fbb0e9 local]# pwd
/usr/local
[root@b9e3f4fbb0e9 local]# vim a.txt
[root@b9e3f4fbb0e9 local]# ifconfig 
eth0: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500
        inet 172.17.0.3  netmask 255.255.0.0  broadcast 172.17.255.255
        ether 02:42:ac:11:00:03  txqueuelen 0  (Ethernet)
        RX packets 8  bytes 656 (656.0 B)
        RX errors 0  dropped 0  overruns 0  frame 0
        TX packets 0  bytes 0 (0.0 B)
        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0

lo: flags=73<UP,LOOPBACK,RUNNING>  mtu 65536
        inet 127.0.0.1  netmask 255.0.0.0
        loop  txqueuelen 1000  (Local Loopback)
        RX packets 0  bytes 0 (0.0 B)
        RX errors 0  dropped 0  overruns 0  frame 0
        TX packets 0  bytes 0 (0.0 B)
        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0

http://192.168.61.33:8080/view/%E5%A4%A7%E6%99%BA%E6%85%A7-%E5%BA%9F%E5%BC%83/job/192.168.61.35-job/configure
cd /root/itcmp/job
buildate=`date +%Y%m%d%H`
docker stop job
docker rm job
docker build -t job:$buildate .
docker run -tid --restart=always --net=host  --name job job:$buildate

