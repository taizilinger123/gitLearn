jenkins
#!/bin/bash –xe
set -xe
cd /home/lab_idljenk/conv_perf_bench
python mkldnn_sha_monitor.py

#!/bin/bash -xe
cd /home/lab_idljenk/conv_perf_bench
./weekly.sh

case "$DATA_TYPE" in
        TxtDataLayer)
            DATA_TYPE="image"
            DATABASE="ImageDataLayer"
            ;;
        LMDBDataLayer)
            DATA_TYPE="lmdb"
            DATABASE="LMDBDataLayer"
            ;;
        Compressed_LMDBDataLayer)
            DATA_TYPE="lmdb"
            DATABASE="Compressed_LMDBDataLayer"
            ;;
        NoDataLayer)
            DATA_TYPE="nodata"
            DATABASE="NoDataLayer"
            ;;
Esac
  if [ $SHA != "NULL" ]; then
    git checkout $SHA
  fi


SERVERS=($(echo $BUILDS | sed "s/,/ /g"))
for SERVER in ${SERVERS[@]}
do
  wget -O "${SERVER}.out" http://10.91.54.11:8080/job/IntelCaffe_Artemis_Multinode_Train/label=Artemis/${SERVER}/consoleText
done
  if [ $(cat iter.log | wc -l) -lt 100 ]; then
    ACC=1
  else
    ACC=$[$(cat iter.log | wc -l)/$ACCURACY]
  Fi
  i=0
  while [ $i -lt $NODES_NUMBER ]
  do
      grep "Iteration" consoleText | grep "^\[${i}]" | sed "s/.*loss = //" > ${i}.log
      echo "\"stat_$SERV.chart\" using 1:$[$i+3]:xtic(2) with linespoints pt 7 title \"NODE_${i}\", \\" >> chart_${SERV}.in
      i=$[$i+1]
  done
  i=1
  while [ $i -le $max ]
  do
      ITER=`sed -n "$i"p iter.log`
      j=0
      while [ $j -lt $NODES_NUMBER ]
      do
          NODE=`sed -n "$i"p ${j}.log`
          ITER="$ITER $NODE"
          j=$[$j+1]
      done
      echo "$i $ITER"
      echo "$i $ITER" >> stat_${SERV}.chart
      i=$[$i+$ACC]
  done
if [ "${TEST_START_TIME}" == NULL ];
then
curl "http://intel-caffe.sh.intel.com/intelcaffe_dashboard_revision_te-caffe_dashboard/index.php?r=er/index"
else
curl "http://intel-caffe.sh.intel.com/intelcaffe_dashboard_revision_te-caffe_dashboard/index.php?r=er/index&test_start_time=$(echo ${TEST_START_TIME} | sed "s/ /%20/g" )"
fi
function CollectResults() {

    cd ${target_work_dir}/DeepBench/code/intel/spmm

    line=$(cat spmm_bench_1.log |wc -l)
    for ((i=1;i<=${line};i++))
    do

        j=0
        sum=0
        for f in spmm_bench_*.log
        do
            awk -v i=$i -v j=$j -F '|' '{
                if (NR == i){
                    if (j == 0){
                        printf ("%s\t%s\t%s\t%s|\t%s|\t",$1,$2,$3,$4,$5)
                    }else {
                        printf ("%s|\t",$5)
                    }
                }
            }' $f

            tmp=$(awk -v i=$i -F '|' '{
                if (NR == i){
                    printf ("%f",$5)
                }
            }' $f)
            sum=$(echo |awk -v tmp=${tmp} -v sum=${sum} '{
                printf ("%f",tmp + sum)
            }')
            ((j++))
        done

        # AVG
        avg=$(echo |awk -v j=$j -v sum=$sum '{
            printf ("%f",sum/j)
        }')

        # STD
        j=0
        sum=0
        for f in spmm_bench_*.log
        do
            tmp=$(awk -v i=$i -F '|' '{
                if (NR == i){
                    printf ("%f",$5)
                }
            }' $f)
            sum=$(echo |awk -v tmp=${tmp} -v avg=${avg} -v sum=${sum} '{
                printf ("%0.1000f",(tmp - avg) * (tmp - avg) + sum)
            }')
            ((j++))
        done
        std=$(echo |awk -v j=$j -v sum=${sum} '{
            printf ("%0.20f",sum/j)
        }')

        # Print avg,std
        if [ $i -eq 1 ];then
            printf "[ avg\tstd ]\n"
        else
            printf "[ ${avg}\t${std} ]\n"
        fi
    done
}
if [ $(echo $?) -eq 0 ];then
    CollectResults
Fi

cat > ${CAFFE_HOME}/run_fast_rcnn.sh << EOF
export http_proxy=http://child-prc.intel.com:913
export https_proxy=http://child-prc.intel.com:913
export ftp_proxy=http://child-prc.intel.com:913
cd $SCRIPT_HOME
/bin/bash -x ./Faster-RCNN_test.sh $CAFFE_HOME
if [ \$? -ne 0 ];then
	exit 1
fi
if [ ${CODE_COVERAGE} == true ];then
	bash -xe ${CAFFE_HOME}/caffe-ccov/ccov.sh ${CAFFE_HOME}
fi
EOF
srun -p skx-8180 --qos por-val bash -x ${CAFFE_HOME}/run_fast_rcnn.sh
srun -p ${HOSTNAME} bash -x ${CAFFE_HOME_A}/test_faster_rcnn.sh
git clone https://github.com/Microsoft/caffe.git caffe-fast-rcnn
cd caffe-fast-rcnn
patch -p1 <${TARGET_WORK_DIR}/caffe.patch
git show

[root@localhost tmp]# grep -niv  '^root' passwd   #-v取反
[root@localhost tmp]# grep  -nB 3 '^ftp' passwd 
9-mail:x:8:12:mail:/var/spool/mail:/sbin/nologin
10-operator:x:11:0:operator:/ROOT:/sbin/nologin
11-games:x:12:100:games:/usr/games:/sbin/nologin
12:ftp:x:14:50:FTP User:/var/ftp:/sbin/nologin
[root@localhost tmp]# grep  -nA 3 '^ftp' passwd 
12:ftp:x:14:50:FTP User:/var/ftp:/sbin/nologin
13-nobody:x:99:99:Nobody:/:/sbin/nologin
14-systemd-network:x:192:192:systemd Network Management:/:/sbin/nologin
15-dbus:x:81:81:System message bus:/:/sbin/nologin
[root@localhost tmp]# grep  -nC 3 '^ftp' passwd 
9-mail:x:8:12:mail:/var/spool/mail:/sbin/nologin
10-operator:x:11:0:operator:/ROOT:/sbin/nologin
11-games:x:12:100:games:/usr/games:/sbin/nologin
12:ftp:x:14:50:FTP User:/var/ftp:/sbin/nologin
13-nobody:x:99:99:Nobody:/:/sbin/nologin
14-systemd-network:x:192:192:systemd Network Management:/:/sbin/nologin
15-dbus:x:81:81:System message bus:/:/sbin/nologin
[root@localhost tmp]# grep  -w 'hello' passwd   #按单词搜索
hello  world
[root@localhost tmp]# grep  'root' passwd 
root:x:0:0:ROOT:/root:/bin/bash
[root@localhost tmp]# grep  -o  'root' passwd   #打印匹配关键字
root
root
[root@localhost tmp]# cut  -d: -f1,7  passwd | head  #截取第1列和第7列，不是第一列到第7列
root:/bin/bash
bin:/sbin/nologin
daemon:/sbin/nologin
adm:/sbin/nologin
lp:/sbin/nologin
sync:/bin/sync
shutdown:/sbin/shutdown
halt:/sbin/halt
mail:/sbin/nologin
operator:/sbin/nologin
[root@localhost tmp]# cut -c1-5 passwd  #截取列前5个字符
root:
bin:x
daemo
adm:x
lp:x:
[root@localhost tmp]# cut -c10-  passwd  #截取列从第10个字符开始到最后
0:ROOT:/root:/bin/bash
:bin:/bin:/sbin/nologin
2:2:daemon:/sbin:/sbin/nologin
:adm:/var/adm:/sbin/nologin
[root@sige1 ~]# runlevel | cut -c3
5
[root@sige1 ~]# runlevel | cut -d ' ' -f2
5
[root@sige1 ~]# grep -v '^#' /etc/inittab | cut -d: -f2
5
[root@sige1 ~]# grep  '^id' /etc/inittab | cut -d: -f2
5
[root@sige1 ~]# grep "initdefault:$" /etc/inittab|cut -c4
5
[root@sige1 tmp]# sort -nr -t: -k3 1.txt    #-n以数字排序，r降序，-t分隔符  -k3第3列
uucp:x:10:14:uucp:/var/spool/uucp:/sbin/nologin
mail:x:8:12:mail:/var/spool/mail:/sbin/nologin
halt:x:7:0:halt:/sbin:/sbin/halt
shutdown:x:6:0:shutdown:/sbin:/sbin/shutdown
sync:x:5:0:sync:/sbin:/bin/sync
lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin
adm:x:3:4:adm:/var/adm:/sbin/nologin
daemon:x:2:2:daemon:/sbin:/sbin/nologin
bin:x:1:1:bin:/bin:/sbin/nologin
root:x:0:0:root:/root:/bin/bash

[root@sige1 tmp]# sort -nr -t: -k3 1.txt -o 2.txt   #把文件输出到2.txt文件里-o就是output
[root@sige1 tmp]# cat 2.txt
[root@sige1 tmp]# cat 3.txt
aaa
111
aaa
444
555
555
555
111
aaa
aaa
[root@sige1 tmp]# sort -u 3.txt   #-u去重复排序
111
444
555
aaa
[root@sige1 tmp]# sort -uR 3.txt  #R随机排序
[root@sige1 tmp]# uniq 3.txt      #去除连续的重复的行,不连续不去除
aaa
111
aaa
444
555
111
aaa
[root@sige1 tmp]# sort -u 3.txt  #去除所有重复的行,不管连不连续
111
444
555
aaa
[root@sige1 tmp]# uniq -c 3.txt  #统计重复行的个数
      1 aaa
      1 111
      1 aaa
      1 444
      3 555
      1 111
      2 aaa
[root@sige1 tmp]# uniq -d 3.txt  #只显示重复的行
555
aaa
[root@sige1 tmp]# uniq -cd 3.txt
      3 555
      2 aaa
[root@sige1 tmp]# echo hello world|tee 11.txt
hello world
[root@sige1 tmp]# cat 11.txt
hello world
[root@sige1 tmp]# echo 999|tee 11.txt    #tee屏幕上打印一份保存到文件里一份，后面覆盖前面
999
[root@sige1 tmp]# cat 11.txt
999
[root@sige1 tmp]# echo 888 |tee -a 11.txt  #-a追加
888
[root@sige1 tmp]# cat 11.txt
999
888
[root@sige1 vsftpd]# grep  -v '^#'  vsftpd.conf | grep  -v  '^$'|tee vsftp.conf.bak
[root@sige1 vsftpd]# cat  vsftp.conf.bak 
anonymous_enable=YES
local_enable=YES
write_enable=YES
local_umask=022
dirmessage_enable=YES
xferlog_enable=YES
connect_from_port_20=YES
xferlog_std_format=YES
listen=YES
pam_service_name=vsftpd
userlist_enable=YES
tcp_wrappers=YES
[root@sige1 vsftpd]# tail  -1  /etc/bashrc
alias grep='grep --color=auto'
[root@sige1 vsftpd]# source  /etc/bashrc
[root@sige1 tmp]# cat  file1
aaaa
111
hello world
222
333
bbb
[root@sige1 tmp]# cat  file2
aaa
hello
111
222
bbb
333
world
[root@sige1 tmp]# cat -n  file1
     1	aaaa
     2	111
     3	hello world
     4	222
     5	333
     6	bbb
[root@sige1 tmp]# cat -n  file2
     1	aaa
     2	hello
     3	111
     4	222
     5	bbb
     6	333
     7	world
[root@sige1 tmp]# diff  file1 file2
1c1,2
< aaaa
---
> aaa
> hello
3d3
< hello world
5d4
< 333
6a6,7
> 333
> world
[root@sige1 tmp]# diff -c  file1 file2
*** file1	2019-09-14 23:51:04.498485266 +0800
--- file2	2019-09-14 23:51:37.160485346 +0800
***************
*** 1,6 ****
! aaaa
  111
- hello world
  222
- 333
  bbb
--- 1,7 ----
! aaa
! hello
  111
  222
  bbb
+ 333
+ world
[root@sige1 tmp]# >file1   #清空file1文件里的内容
[root@sige1 tmp]# diff  -u  file1 file2
--- file1	2019-09-15 00:04:47.016485030 +0800
+++ file2	2019-09-14 23:51:37.160485346 +0800
@@ -1,7 +1,7 @@
-aaaa
+aaa
+hello
 111
-hello world
 222
-333
 bbb
-
+333
+world
[root@sige1 tmp]# ll  -R  dir*
dir1:
总用量 0
-rw-r--r-- 1 root root 0 9月  15 21:31 file1
-rw-r--r-- 1 root root 0 9月  15 21:31 file2
-rw-r--r-- 1 root root 0 9月  15 21:31 file3
-rw-r--r-- 1 root root 0 9月  15 21:31 file4
-rw-r--r-- 1 root root 0 9月  15 21:31 file5

dir2:
总用量 0
-rw-r--r-- 1 root root 0 9月  15 21:32 file1
-rw-r--r-- 1 root root 0 9月  15 21:32 file2
-rw-r--r-- 1 root root 0 9月  15 21:32 file3
-rw-r--r-- 1 root root 0 9月  15 21:32 test1
-rw-r--r-- 1 root root 0 9月  15 21:32 test2
[root@sige1 tmp]# diff  -q  dir1 dir2
Only in dir1: file4
Only in dir1: file5
Only in dir2: test1
Only in dir2: test2
[root@sige1 tmp]# diff  -u  file1 file2 > file.patch
[root@sige1 tmp]# cat  file.patch 
--- file1	2019-09-15 00:04:47.016485030 +0800
+++ file2	2019-09-14 23:51:37.160485346 +0800
@@ -1,7 +1,7 @@
-aaaa
+aaa
+hello
 111
-hello world
 222
-333
 bbb
-
+333
+world
[root@sige1 tmp]# patch file1 file.patch 
patching file file1
[root@sige1 tmp]# diff  file1 file2
[root@sige1 tmp]# cat  file1 
aaa
hello
111
222
bbb
333
world
[root@sige1 tmp]# cat  file2
aaa
hello
111
222
bbb
333
world
[root@sige1 tmp]# >file1
[root@sige1 tmp]# >file2
[root@sige1 tmp]# vim  file1
[root@sige1 tmp]# vim  file2
[root@sige1 tmp]# cat -n file1
     1	hello world
     2	8888
[root@sige1 tmp]# cat -n file2
     1	heima itcast
     2	999
     3	oooo
[root@sige1 tmp]# paste file1 file2 
hello world	heima itcast
8888	999
	oooo
[root@sige1 tmp]# cat -n file2
     1	heima itcast
     2	999
     3	oooo
[root@sige1 tmp]# paste -d: file1 file2 
hello world:heima itcast
8888:999
:oooo
[root@sige1 tmp]# paste  file1 file2
hello world	heima itcast
8888	999
	oooo
[root@sige1 tmp]# paste -s  file1 file2
hello world	8888
heima itcast	999	oooo
[root@sige1 tmp]# cat  file1  file2
hello world
8888
heima itcast
999
oooo
[root@sige1 tmp]# paste  file1 file2
hello world	heima itcast
8888	999
	oooo

vim  passwd 
:set  list 
[root@sige1 tmp]# tr 'a-z' 'A-Z' < 1.txt
ROOT:X:0:0:ROOT:/ROOT:/BIN/BASH
BIN:X:1:1:BIN:/BIN:/SBIN/NOLOGIN
DAEMON:X:2:2:DAEMON:/SBIN:/SBIN/NOLOGIN
ADM:X:3:4:ADM:/VAR/ADM:/SBIN/NOLOGIN
LP:X:4:7:LP:/VAR/SPOOL/LPD:/SBIN/NOLOGIN
SYNC:X:5:0:SYNC:/SBIN:/BIN/SYNC
SHUTDOWN:X:6:0:SHUTDOWN:/SBIN:/SBIN/SHUTDOWN
HALT:X:7:0:HALT:/SBIN:/SBIN/HALT
MAIL:X:8:12:MAIL:/VAR/SPOOL/MAIL:/SBIN/NOLOGIN
UUCP:X:10:14:UUCP:/VAR/SPOOL/UUCP:/SBIN/NOLOGIN
[root@sige1 tmp]# cat  1.txt
root:x:0:0:root:/root:/bin/bash
bin:x:1:1:bin:/bin:/sbin/nologin
daemon:x:2:2:daemon:/sbin:/sbin/nologin
adm:x:3:4:adm:/var/adm:/sbin/nologin
lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin
sync:x:5:0:sync:/sbin:/bin/sync
shutdown:x:6:0:shutdown:/sbin:/sbin/shutdown
halt:x:7:0:halt:/sbin:/sbin/halt
mail:x:8:12:mail:/var/spool/mail:/sbin/nologin
uucp:x:10:14:uucp:/var/spool/uucp:/sbin/nologin
[root@sige1 tmp]# tr  '0-9' '@' < 1.txt
[root@sige1 tmp]# tr  -d  'a-z' < 1.txt
::0:0::/://
::1:1::/://
::2:2::/://
::3:4:://://
::4:7::///://
::5:0::/://
::6:0::/://
::7:0::/://
::8:12::///://
::10:14::///://
[root@sige1 tmp]# tr -d ':/ 0-9 ,' < 1.txt
rootxrootrootbinbash
binxbinbinsbinnologin
daemonxdaemonsbinsbinnologin
admxadmvaradmsbinnologin
lpxlpvarspoollpdsbinnologin
syncxsyncsbinbinsync
shutdownxshutdownsbinsbinshutdown
haltxhaltsbinsbinhalt
mailxmailvarspoolmailsbinnologin
uucpxuucpvarspooluucpsbinnologin
[root@sige1 tmp]# tr -d '[:/ 0-9 ,]' < 1.txt
[root@sige1 tmp]# cat  1.txt
root:x:0:0:root:/root:/bin/bash
bin:x:1:1:bin:/bin:/sbin/nologin
dae,mon:x:2:2:daemon:/sbin:/sbin/nologin
adm:x:3:4:adm:/var/adm:/sbin/nologin
lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin
sync:x:5:0:sync:/sbin:/bin/sync
shutdown:x:6:0:shutdown:/sbin:/sbin/shutdown
halt:x:7:0:halt:/sbin:/sbin/halt
mail:x:8:12:mail:/var/spool/mail:/sbin/nologin
uucp:x:10:14:uucp:/var/spool/uucp:/sbin/nologin
aaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbcccccccccccccc
abcabcabc
[root@sige1 tmp]# tr -s 'a-z' < 1.txt
rot:x:0:0:rot:/rot:/bin/bash
bin:x:1:1:bin:/bin:/sbin/nologin
dae,mon:x:2:2:daemon:/sbin:/sbin/nologin
adm:x:3:4:adm:/var/adm:/sbin/nologin
lp:x:4:7:lp:/var/spol/lpd:/sbin/nologin
sync:x:5:0:sync:/sbin:/bin/sync
shutdown:x:6:0:shutdown:/sbin:/sbin/shutdown
halt:x:7:0:halt:/sbin:/sbin/halt
mail:x:8:12:mail:/var/spol/mail:/sbin/nologin
ucp:x:10:14:ucp:/var/spol/ucp:/sbin/nologin
abc
abcabcabc
[root@sige1 tmp]# ifconfig eth0 | grep 'Bcast' | cut -d: -f2|tr -d 'a-zA-Z '
192.168.239.164
[root@sige1 tmp]# ifconfig eth0 | grep 'Bcast' | cut -d: -f2|cut -d' ' -f1
192.168.239.164
[root@sige1 tmp]# ifconfig eth0 | grep 'Bcast'|tr -d 'a-zA-Z:'
           192.168.239.164  192.168.239.255  255.255.255.0
[root@sige1 tmp]# ifconfig eth0 | grep 'Bcast'|tr -d 'a-zA-Z:'|tr ' ' '\n'|grep -v '^$'
192.168.239.164
192.168.239.255
255.255.255.0
[root@sige1 tmp]# ifconfig eth0 | grep 'HW'| tr -s ' '
eth0 Link encap:Ethernet HWaddr 00:0C:29:CA:40:D9 
[root@sige1 tmp]# ifconfig eth0 | grep 'HW'| tr -s ' '|cut -d' ' -f5
00:0C:29:CA:40:D9
[root@sige1 tmp]# grep 'bash$' passwd
root:x:0:0:root:/root:/bin/bash
gongli:x:500:500::/home/gongli:/bin/bash
[root@sige1 tmp]# grep 'bash$' passwd | grep -v 'root'
gongli:x:500:500::/home/gongli:/bin/bash
[root@sige1 tmp]# grep 'bash$' passwd | grep -v 'root'|cut -d: -f1,2,7
gongli:x:/bin/bash
[root@sige1 tmp]# grep 'bash$' passwd | grep -v 'root'|cut -d: -f1,2,7|tr ':' '\t'
gongli	x	/bin/bash
[root@sige1 tmp]# grep 'bash$' passwd | grep -v 'root'|cut -d: -f1,2,7|tr ':' '\t'|tee abc.txt
gongli	x	/bin/bash
[root@sige1 tmp]# cat  abc.txt 
gongli	x	/bin/bash
<<<<<<< HEAD
$ date +%F
2019-09-26
$ echo "$(date +%F)"
2019-09-26
$ echo '$(date +%F)'
$(date +%F)
$ echo "`date +%F`"
2019-09-26
$ echo  $(echo "`date +%F`")
2019-09-26
``=$()
$ cat  shift.sh
#!/bin/bash
sum=0
while[ $# -ne 0 ]
do
let sum=$sum+$1
shift 2
done
echo sum=$sum



=======
sige@sige1:~/shell$ echo "1 2 3 4 5"|awk -v istor=100 '{if(istor==100){print $0}}'
1 2 3 4 5
sige@sige1:~/shell$ echo 'a b c d'|awk '{print $0}'
a b c d
sige@sige1:~/shell$ echo 'a b c d'|awk '{print $1}'
a
sige@sige1:~/shell$ echo 'a b c d'|awk '{print NF}'
4
sige@sige1:~/shell$ echo 'a b c d'|awk '{print $NF}'
d
sige@sige1:~/shell$ echo 'a b c d'|awk '{print $(NF-1)}'
c
sige@sige1:~/shell$ array=(bill   chen  bai   hu);
sige@sige1:~/shell$ echo ${#array[@]}
4
sige@sige1:~/shell$ echo ${array[*]}
bill chen bai hu
sige@sige1:~/shell$ str="hello"
sige@sige1:~/shell$ echo  ${#str}
5
sige@sige1:~/shell$ cat  num.txt
11
22
33
44
55
66
sige@sige1:~/shell$ sed  -e 's/11/22/;s/33/99/g' num.txt
22
22
99
44
55
66
[root@docker-git-harbor ~]# date +%F
2019-11-01
[root@docker-git-harbor ~]# echo  "hello world"
hello world
[root@docker-git-harbor ~]# echo  'hello world'
hello world
[root@docker-git-harbor ~]# echo "$(date +%F)"
2019-11-01
[root@docker-git-harbor ~]# echo '$(date +%F)'
$(date +%F)
[root@docker-git-harbor ~]# echo "$(date +%F)"
2019-11-01
[root@docker-git-harbor ~]# echo "`date +%F`"
2019-11-01
[root@docker-git-harbor ~]# echo $(echo "`date +%F`")
2019-11-01
bash -x  first_shell.sh 
bash -n first_shell.sh  //检测语法有没有问题
source  first_shell.sh 
[root@docker-git-harbor ~]# date +'%F %T'
2019-11-01 09:49:12
[root@docker-git-harbor ~]# echo "我$(date +'%F %T')"
我2019-11-01 09:49:38
[root@docker-git-harbor ~]# A=hello
[root@docker-git-harbor ~]# echo $A
hello
[root@docker-git-harbor ~]# echo ${A}
hello
[root@docker-git-harbor ~]# A=world
[root@docker-git-harbor ~]# echo $A
world
[root@docker-git-harbor ~]# unset A
[root@docker-git-harbor ~]# echo $A

[root@docker-git-harbor ~]# A="hello world"
[root@docker-git-harbor ~]# echo $A
hello world
[root@docker-git-harbor ~]# A='hello world'
[root@docker-git-harbor ~]# echo $A
hello world
[root@docker-git-harbor ~]# _A=hello
[root@docker-git-harbor ~]# echo $_A
hello
[root@docker-git-harbor ~]# echo ${_A}
hello
[root@docker-git-harbor ~]# A =123
bash: A: command not found...
[root@docker-git-harbor ~]# A= 123
bash: 123: command not found...
[root@docker-git-harbor ~]# A = 123
bash: A: command not found...
[root@docker-git-harbor ~]# A=123456
[root@docker-git-harbor ~]# echo $A
123456
[root@docker-git-harbor ~]# echo ${A}
123456
[root@docker-git-harbor ~]# echo ${A:2:3}
345
[root@docker-git-harbor ~]# hostname
docker-git-harbor
[root@docker-git-harbor ~]# A=`hostname`
[root@docker-git-harbor ~]# echo $A
docker-git-harbor
[root@docker-git-harbor ~]# cat /etc/redhat-release 
CentOS Linux release 7.4.1708 (Core) 
[root@docker-git-harbor ~]# uname -r
3.10.0-693.el7.x86_64
[root@docker-git-harbor ~]# B=$(uname -r)
[root@docker-git-harbor ~]# echo $B
3.10.0-693.el7.x86_64
[root@docker-git-harbor ~]# read name
harry
[root@docker-git-harbor ~]# echo $name
harry
[root@docker-git-harbor ~]# read -p "Input your name:" name
Input your name:jack
[root@docker-git-harbor ~]# echo $name
jack
[root@docker-git-harbor ~]# read -s -p "Input your password:" pass
Input your password:[root@docker-git-harbor ~]# 
[root@docker-git-harbor ~]# echo $pass
123456
[root@docker-git-harbor ~]# read -n 5 -p "Input your name:" name
Input your name:harry[root@docker-git-harbor ~]# 
[root@docker-git-harbor ~]# read -n 5 -p "Input your name:" name
Input your name:jack
[root@docker-git-harbor ~]# read -t 3 -p "name:" name
name:1111[root@docker-git-harbor ~]# 
[root@docker-git-harbor ~]# echo $name

[root@docker-git-harbor ~]# read -t 3 -p "name:" name
name:344
[root@docker-git-harbor ~]# echo $name
344
[root@docker-git-harbor ~]# vim ip.txt
[root@docker-git-harbor ~]# read -p "请输入IP地址:" IP MASK <ip.txt
[root@docker-git-harbor ~]# echo $IP
10.1.1.1
[root@docker-git-harbor ~]# echo $MASK
255.255.255.0
[root@docker-git-harbor ~]# cat ip.txt
10.1.1.1  255.255.255.0
[root@docker-git-harbor ~]# 
[root@docker-git-harbor ~]# A=123
[root@docker-git-harbor ~]# echo $A
123
[root@docker-git-harbor ~]# A=hello
[root@docker-git-harbor ~]# echo $A
hello
[root@docker-git-harbor ~]# declare -i A=123  //定义整数变量
[root@docker-git-harbor ~]# echo $A
123
[root@docker-git-harbor ~]# A=hello
[root@docker-git-harbor ~]# echo $A
0
[root@docker-git-harbor ~]# A=333
[root@docker-git-harbor ~]# echo $A
333
[root@docker-git-harbor ~]# declare -r B=hello  //定义只读变量
[root@docker-git-harbor ~]# echo $B
hello
[root@docker-git-harbor ~]# B=8888
-bash: B: readonly variable
[root@docker-git-harbor ~]# unset B
-bash: unset: B: cannot unset: readonly variable
[root@docker-git-harbor ~]# exit  //退出去B就可以用了
[root@docker-git-harbor ~]# AAAA=heima
[root@docker-git-harbor ~]# env|grep AAAA
[root@docker-git-harbor ~]# export AAAA
[root@docker-git-harbor ~]# env|grep AAAA
AAAA=heima
[root@docker-git-harbor ~]# declare -x BBBB=itcast  //定义环境变量
[root@docker-git-harbor ~]# env|grep BBBB
BBBB=itcast
[root@docker-git-harbor ~]# set|grep A  //查看本地变量
[root@docker-git-harbor ~]# declare -x BBB=heima
[root@docker-git-harbor ~]# CCC=itcast
[root@docker-git-harbor ~]# export CCC
[root@docker-git-harbor ~]# env|grep BBB
BBBB=itcast
BBB=heima
[root@docker-git-harbor ~]# env|grep CCC
CCC=itcast
[root@docker-git-harbor ~]# export DDD=7777
[root@docker-git-harbor ~]# env|grep DDD
DDD=7777
[root@docker-git-harbor ~]# ps
   PID TTY          TIME CMD
  1983 pts/1    00:00:00 bash
  3981 pts/1    00:00:00 ps
[root@docker-git-harbor ~]# echo $?
0
[root@docker-git-harbor shell02]# cat variable.sh 
#!/bin/env bash 
# Name:variable.sh
# ......

echo "\$0 = $0"
echo "\$# = $#"
echo "\$* = $*"
echo "\$@ = $@"
echo "\$1 = $1"
echo "\$2 = $2"
echo "\$3 = $3"
echo "\$10 = ${10}"
echo "系统变量就是这样，你懂了吗？"
[root@docker-git-harbor shell02]# ./variable.sh 1 2 3 4 5 6 7 8 9 10
$0 = ./variable.sh
$# = 10
$* = 1 2 3 4 5 6 7 8 9 10
$@ = 1 2 3 4 5 6 7 8 9 10
$1 = 1
$2 = 2
$3 = 3
$10 = 10
系统变量就是这样，你懂了吗？
[root@docker-git-harbor shell02]# ps
   PID TTY          TIME CMD
  7375 pts/6    00:00:00 bash
  7423 pts/6    00:00:00 ps
[root@docker-git-harbor shell02]# echo $$
7375
[root@docker-git-harbor shell02]# sleep 500 &
[1] 7457
[root@docker-git-harbor shell02]# sleep 600 &
[2] 7459
[root@docker-git-harbor shell02]# ps -ef | grep sleep
root       7457   7375  0 05:45 pts/6    00:00:00 sleep 500
root       7459   7375  0 05:46 pts/6    00:00:00 sleep 600
root       7469    630  0 05:46 ?        00:00:00 sleep 60
root       7471   7375  0 05:46 pts/6    00:00:00 grep --color=auto sleep
[root@docker-git-harbor shell02]# echo $!
7459
[root@docker-git-harbor shell02]# ls -l
total 4
-rwxr-xr-x 1 root root 235 Nov  2 05:38 variable.sh
[root@docker-git-harbor shell02]# echo !$
echo -l
-l
[root@docker-git-harbor shell02]# echo $((1+1))
2
[root@docker-git-harbor shell02]# echo $((10-5))
5
[root@docker-git-harbor shell02]# echo $[85*74]
6290
[root@docker-git-harbor shell02]# echo $[10/8]
1
[root@docker-git-harbor shell02]# echo $[10%8]
2
[root@docker-git-harbor shell02]# echo $[8/10]
0
[root@docker-git-harbor shell02]# echo $[8%10]
8
[root@docker-git-harbor shell02]# echo $[5%10]
5
[root@docker-git-harbor shell02]# echo $[10%7]
3
[root@docker-git-harbor shell02]# expr 1 + 1
2
[root@docker-git-harbor shell02]# expr 1+1  //必须加空格
1+1
[root@docker-git-harbor shell02]# expr 10 - 5
5
[root@docker-git-harbor shell02]# expr 10 * 5
expr: syntax error
[root@docker-git-harbor shell02]# expr 10 \* 5
50
[root@docker-git-harbor shell02]# expr 10  /  5
2
[root@docker-git-harbor shell02]# expr 10  %  5
0
[root@docker-git-harbor shell02]# expr 5  %  5
0
[root@docker-git-harbor shell02]# n=1;let n=n+1;echo $n
2
[root@docker-git-harbor shell02]# let n+=2
[root@docker-git-harbor shell02]# echo $n
4
[root@docker-git-harbor shell02]# let n-=2
[root@docker-git-harbor shell02]# echo $n
2
[root@docker-git-harbor shell02]# let n=n*2
[root@docker-git-harbor shell02]# echo $n
4
[root@docker-git-harbor shell02]# let n*=2
[root@docker-git-harbor shell02]# echo $n
8
[root@docker-git-harbor shell02]# let n/=2
[root@docker-git-harbor shell02]# echo $n
4
[root@docker-git-harbor shell02]# let n/=2
[root@docker-git-harbor shell02]# echo $n
2
[root@docker-git-harbor shell02]# let n=n**3
[root@docker-git-harbor shell02]# echo $n
8
[root@docker-git-harbor shell02]# let n=n**3
[root@docker-git-harbor shell02]# echo $n
512
[root@docker-git-harbor shell02]# echo $[1+1.5]
-bash: 1+1.5: syntax error: invalid arithmetic operator (error token is ".5")
[root@docker-git-harbor shell02]# echo 1+1.5|bc
2.5
[root@docker-git-harbor shell02]# bc
bc 1.06.95
Copyright 1991-1994, 1997, 1998, 2000, 2004, 2006 Free Software Foundation, Inc.
This is free software with ABSOLUTELY NO WARRANTY.
For details type `warranty'. 
1+4.5
5.5
quit
[root@docker-git-harbor shell02]# bc
bc 1.06.95
Copyright 1991-1994, 1997, 1998, 2000, 2004, 2006 Free Software Foundation, Inc.
This is free software with ABSOLUTELY NO WARRANTY.
For details type `warranty'. 
2^7
128
2**7
(standard_in) 2: syntax error
quit
[root@docker-git-harbor shell02]# i=1;let i++;echo $i
2
[root@docker-git-harbor shell02]# j=1;let ++j;echo $j
2
[root@docker-git-harbor shell02]# unset i j
[root@docker-git-harbor shell02]# echo $i

[root@docker-git-harbor shell02]# echo $j

[root@docker-git-harbor shell02]# i=1;j=1
[root@docker-git-harbor shell02]# let x=i++
[root@docker-git-harbor shell02]# echo $x
1
[root@docker-git-harbor shell02]# let y=++j
[root@docker-git-harbor shell02]# echo $y
2
[root@docker-git-harbor shell02]# man test
[root@docker-git-harbor shell02]# ll
total 4
-rwxr-xr-x 1 root root 235 Nov  2 05:38 variable.sh
[root@docker-git-harbor shell02]# touch file1
[root@docker-git-harbor shell02]# echo hello > file2
[root@docker-git-harbor shell02]# ll
total 8
-rw-r--r-- 1 root root   0 Nov  2 06:34 file1
-rw-r--r-- 1 root root   6 Nov  2 06:34 file2
-rwxr-xr-x 1 root root 235 Nov  2 05:38 variable.sh
[root@docker-git-harbor shell02]# mkdir dir1
[root@docker-git-harbor shell02]# test -e ./file1
[root@docker-git-harbor shell02]# echo $?
0
[root@docker-git-harbor shell02]# test -e ./test1
[root@docker-git-harbor shell02]# echo $?
1
[root@docker-git-harbor shell02]# [ -d ./dir1 ];echo $?
0
[root@docker-git-harbor shell02]# ls
dir1  file1  file2  variable.sh
[root@docker-git-harbor shell02]# [ -d ./file1 ];echo $?
1
[root@docker-git-harbor shell02]# ln -s file1 test1
[root@docker-git-harbor shell02]# [ -L ./test1 ];echo $?
0
[root@docker-git-harbor shell02]# rm -rf file1
[root@docker-git-harbor shell02]# [ -L ./test1 ];echo $?
0
[root@docker-git-harbor shell02]# [[ -f ./file2 ]];echo $?
0
[root@docker-git-harbor shell02]# [[ -f ./test1 ]];echo $?
1
ps -aux | grep sleep| awk '{print $2}' | xargs kill
if [ condition ];then 
     command
     command
fi

if  test 条件;then 
     命令
fi 

if [[ 条件 ]];then
    命令
fi 

[ 条件 ] && command

if [ condition ];then
      command1
else
      command2
fi 

[ 条件 ] && command1 || command2

sige@sige1:~/shell$ cat  if1.sh
#!/bin/env bash 
# ......

if [ "$1" = "hello" ];then
      echo  world
   else 
      echo  hello
fi

sige@sige1:~/shell$ cat  if2.sh
#!/bin/env  bash 

read  -p '请输入一个字符串:' str 
if [ "$str" = 'hello' ];then
     echo  'world'
   else 
     echo '请输入hello!'
fi

#!/bin/env bash 

A=hello
B=world
C=hello

if [ "$1" = "$A" ];then 
      echo  "$B"
else
      echo  "$C"
fi 

read -p '请输入一个字符串:' str;
[ "$str" = 'hello' ] && echo 'world' || echo '请输入hello!'

if [ condition1 ];then 
      command1  
elif [ condition2 ];then 
      command2
else
      command3
fi 

#!/bin/env  bash 
#.....

if [ 1 -eq 2  ];then 
     echo  1
elif [ 0 -ne 2  ];then 
     echo  2
elif [ 0 -ne 2 ];then 
     echo 999
elif [ 0 -ne 2 ];then 
     echo 888
else
     echo 3
fi 


#!/bin/env  bash 
#该脚本用于判断当前主机是否和远程指定主机互通

read  -p "请输入你要ping的主机的IP:" ip
ping -c1 $ip &>/dev/null
if [ $? -eq 0 ];then
  echo "当前主机和远程主机$ip是互通的"
else 
  echo "当前主机和远程主机$ip不通的"
fi

sige@sige1:~$ for i in {1..100..2};do echo $i;done
sige@sige1:~$ for i in $(seq 10);do echo $i;done
sige@sige1:~$ for i in {10..1};do echo $i;done
10
9
8
7
6
5
4
3
2
1
sige@sige1:~$ seq 10 -1 1
10
9
8
7
6
5
4
3
2
1
sige@sige1:~$ cat  for3.sh 
#!/bin/env bash 
for i 
do 
echo $@ 
done
sige@sige1:~$ sh   for3.sh  a  b c
a b c
a b c
a b c

sige@sige1:~$ for ((i=1;i<=5;i++));do echo $i;done
1
2
3
4
5
sige@sige1:~$ for ((i=1;i<=5;i+=2));do echo $i;done
1
3
5
sige@sige1:~$ for ((i=2;i<=10;i+=2));do echo $i;done
2
4
6
8
10
